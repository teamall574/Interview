1-what is maven

>>Maven is build tool to build your code it is powerful tool 
>>Maven is a build automation tool used primarily for Java projects
>>Maven is a powerful project management tool that is based on POM (project object model). It is used for projects build, dependency and documentation
>>maven will do resource, compile, Test, Package 

2-what is the pre-requesite for maven

1-java above 7.1 version

3-types of build tools

1-Maven
2-Ant
3-Gradle ...etc

4-what is build lifecycles

1-Default:-
2-clean:-remove all files generated by the previous build(we use build the code everytime so that can use clean it will remove previous files )
3-site:-documentation(99% we will not use, very regularly for audits...)

5-what are the maven Goals

1-Validate:- validate the project is correct and all necessary information is availble
2-compile:- compile the source code of the project
3-Test:- run test using suitable unit testing framework
4-Package:- take the compiled code package it in distributable format
5-Verify:- run any checks to verfiy the package is valid and meets quality criteria
6-Install:- install the package into the local repository for use as a dependency in other projects locally
7-Deploy:- copies the final package to the remote repository for sharing with other projects 

6-what is the differnce between Ant and Maven

Ant:-
1-Actions are defined in Ant(so much of scripting)
2-Sequences are defined in Ant
3-librarays are part of source code(diffcult to maintain)
4-Ant are follows you you need to tell how to work


Maven:-
1-Maven say what to do not how to do
2-How to build is defined maven(life cycle)
3-librarys are not part of source code
4-You need to follow maven no need to tell how to do

7-what is diff with other tools
	
>> open source
>> it is not only build tool and also project management tool
>> it follows set of standards/rules/protocals	
>> default project lifecycle 
>> dependency management

8-what is build 

>>build creating the package like war are jar file 

9-what is variable

>>variable is name which store the data 

10-if your system is installed java 11 and you need to install 17 make it primary how you will o

>>/usr/sbin/alternativer --config java 
then select the version of your java if it 1 is 17 2 is 11 and also see the * mark then give the 17 version number

11-what is pom.xml how it works

>>A project object model(pom) is the fundmental unit of work in maven it is an xml file that contains information about the project and configuration details
used by maven build the project.it conatins default values for most projects

what contains pom.xml
>>pom.xml version and groupid and artifact id and dependencies junit and name of the project plugins nothing but goals indirectly
>>dependencies, build directory, source directory, test source directory, plugin, goals, versions, unit tests etc

12-Where does Maven store dependencies?

>>Maven's local repository is a directory on the local machine that stores all the project artifacts. When we execute a Maven build, Maven automatically downloads all 
the dependency jars into the local repository. Usually, this directory is named 
>>ls -a   (.m2)   -->it will hide yu can see that in .m2 directory

13-how to create a pom file using cmd in linux

>>mvn archetype:generate

14-What is Nexus Repository Manager?

>>Nexus by Sonatype is a repository manager that organizes, stores and distributes artifacts needed for development. With Nexus, developers can completely 
control access to, and deployment of, every artifact in an organization from a single location, making it easier to distribute software

15-what are the pre-requesistes for nexus 

>>java need install

16-What are the key features of Nexus Repository Manager?

>>Nexus Repository Manager offers features like artifact management, dependency management, proxying remote repositories, security and access control, repository health check, and support for
multiple repository formats (e.g., Maven, npm, NuGet, Docker).

17-How does Nexus Repository handle authentication and authorization?

>>Nexus Repository comes with a few different authentication and authorization modules out of the box, including LDAP, Apache Commons, and JBoss modules.

18-What’s the difference between a Maven, NPM, and Docker repository in Nexus Repository?

>>Maven repositories are used for storing Java artifacts, while NPM repositories are used for storing JavaScript artifacts, and Docker repositories are used for storing Docker images.

19-What are the different ways to configure Nexus Repository Manager 3?

>>There are three ways to configure Nexus Repository Manager 3: the GUI, the command line, and the REST API.

20-How can you monitor the health of your repositories in Nexus Repository?

>>Nexus Repository provides a few different ways to monitor the health of your repositories. The first is the Repository Health Check, which will scan your repositories and report on any potential problems.
You can also use the Repository Monitor to keep an eye on the status of your repositories in real-time. Finally, the Repository Manager also provides some basic reporting that can be used to track the health
of your repositories over time.

21-What types of files can be stored in Nexus Repository?

>>Nexus Repository can store any type of file, but it is most commonly used for storing Java artifacts, such as JARs and WARs.

22-Are there any limitations to consider when using Nexus Repository?

>>Yes, there are a few potential limitations to consider when using Nexus Repository. First, Nexus Repository is not free and will require a subscription for continued use. Additionally, 
Nexus Repository is not compatible with all software, so it is important to check compatibility before using it. Finally, Nexus Repository can be complex to set up and use, so it is important
to have some technical expertise before using it

23-Is it possible to create custom repositories in Nexus Repository? If yes, then how?

>>Yes, it is possible to create custom repositories in Nexus Repository. You can do this by going to the “Repositories” section of the Nexus Repository Manager, and then clicking 
on the “Create Repository” button. From there, you will be able to select the type of repository that you want to create, and then follow the prompts to complete the process.

24-Can Nexus 2 and 3 be run at the same time?

>>Yes, but will need different ports.

25-How does Nexus Repository Manager ensure the security of artifacts?

>>Nexus Repository Manager offers security and access control mechanisms. It allows you to define roles and permissions to restrict access to repositories, artifacts, and operations. It also supports
integration with external authentication systems like LDAP or Active Directory.

26-How can Nexus Repository Manager help in continuous integration and delivery (CI/CD) pipelines?

>> Nexus Repository Manager can act as a central artifact repository in CI/CD pipelines. It provides APIs and integrations with popular build tools and CI/CD systems, enabling seamless artifact management
and deployment automation.

27-Are there any alternatives to Nexus Repository Manager?

>>Yes, there are alternative artifact repository managers available, such as JFrog Artifactory and Apache Archiva. These tools offer similar functionalities and are widely used in the software development
industry.

28-How does Nexus Repository Manager handle repository backup and restore?

>>Nexus Repository Manager provides backup and restore functionality, allowing administrators to create backups of repositories and configurations. These backups can be used to restore the repository
in case of data loss or system failure.

29-what is sonarqube

>>SonarQube is a Code Quality Assurance tool that collects and analyzes source code, and provides reports for the code quality of your project. It combines static and dynamic analysis tools and enables
quality to be measured continually over time.

30-what is quality code

>>Quality Gates are the perfect way to guarantee standards are met and governed across all the organization's projects. Quality Gates are a group of threshold measures 
set on your project such as Technical Debt Measure, Code Coverage, Number of Blocker / Critical Issues, Security Rating / Unit Test Pass Rate and so on. 
Quality Gates are described and managed in the Quality Gates page found in the top menu.
>>is it bug free
>>is it secure
>>duplications avoided like code duplicate
>>tested properly
>>any complex code
>>easy to integare with other code
>>Maintainability
>>Quality gates

31-what is static code analysis

>>by using static code analysis you can do review your code and improve your code quality and alos its reduces lot of time and efforts

32-what are the tools availble in market

1-sonarqube
2-coverity
3-raxis
4-veracode
5-codescene

33-what is the advantages of sonarqube using

>>its act as quality management tool
1-code analysis
2-test reports
3-code coverage

34-what are the prerequisite for SonarQube Installation

1-java jdk-11 version
2-database

35-List the components in SonarQube architecture

>>Sonar server: -it is takes the code or it is web-server
>>SonarQube Database:->>the database stores the the metrics issues any kind anaylis reports of projects 
>>Sonar Scanner:- it is used to analyize the source code 
>>Source Code

36-what languages should support sonarqube

1-java
2-c#
3-c++
4-python
5-ruby
6-php

37-what is sonarqube metrics

>>Quality gate defined as set of rules or threshold measures
>>when you creating a code coverage you add conditions

Complexity
Duplications
Issues
Maintainability
Quality gates
Reliability
Security
Size
Tests

38-How does Sonar measure code coverage?

>>SonarQube itself does not calculate coverage. To include coverage results in your analysis, you must set up a third-party coverage tool and configure SonarQube to 
import the results produced by that tool. Below, you'll find guidelines and resources, as well as language- and tool-specific analysis parameters.

39-Explain why does SonarQube need a database

>>SonarQube needs to communicate with the database to save the results of the analysis. The SonarQube Runner needs to interact with both the web server and the database
and is suggested as the default launcher to analyze a project with SonarQube. This means all the passwords should be stored in the database.

40-Explain the difference between SonarLint and SonarQube?

SonarQube:
>>SonarQube is the main server that performs complete analysis (activated by the different SonarQube scanners).
>>The analysis is to provide your code base a 360 Â° view of the quality. To this end, it periodically analyzes each source line of your project.

SonarLint:
>>SonarLint is available only in the IDE (IntelliJ, Visual Studio and Eclipse).
>>Its objective is to offer immediate feedback as you enter your code.
>>It concentrates on what code you specify or modify for this function.
>>SonarLint is an agent that enables us to connect with SonarQube and executes the analysis remotely.

>>Both SonarQube and SonarLint are dependent on the same analyzers for static source code, most of which is written using SonarSource technology.

41-Is SonarQube Replacement for Checkstyle, PMD, FindBugs?

>>By default, for Java projects, Sonar executes FindBugs, CheckStyle, and PMD, as well as a few other "plugins", such as Cobertura. The main advantage is that it 
stores the history in a database. Sonar uses these three tools as plugins and the data from all three of these tools is applied with a value that displays graphs.

42-Does SonarQube support MySQL?

>>Supported databases are MySQL, Oracle, PostgreSQL and Microsoft SQLServer. # - Changes to database connection URL (sonar. jdbc.

43-what is code anaylsis

>>Improving the overall code quality
>>Detecting areas of code which can be simplified
>>find bugs early in the development cycle which less cost to fix them

44-how can you create a report in sonarqube

>>using jacoco plugin you can you can add plugins pom.xml

45-what is reversy proxy for jenkins or sonarqube or any tools

>>A reverse proxy server is a type of proxy server that typically sits behind the firewall in a private network and directs client requests to the 
appropriate backend server. A reverse proxy provides an additional level of abstraction and control to ensure the smooth flow of network
traffic between clients and servers.

46-what are there in reversy proxy setup

>>upstream it will point your server address and server port details and access and error logs and proxy buffers and sizes and locations like headers many more 
upstream jenkins {
	server 127.0.0.1:8080;
}
server
	listen 80;
	server_name bughunteranji or your server ip;
	access _log /var/log/nginx/jenkins.access.log;
	error_log /var/log/nginx/jenkins.error.log;
	proxy_buffers 16 64k;
	proxy_buffer_size 128k;

	location / {
		proxy_pass http://jenkins;
		proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
		proxy_redirect off;
		
		proxy_set_header Host $host;
		proxy_set_header X-Real-Ip $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forward_for;
		proxy_set_header X-Forwarded-proto https;
	
	}
}
