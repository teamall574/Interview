1-what is linux 

>>Why linux is using because it's open source you can modify you can what you want there is no graphical UI so it's will not consume much cpu Or ram it's performance is high and security will more stability 
run 10 years also non-stop like this
>>Linux is not operating system it's kernel
>>Unix is very costly tightly coupled to hardware
>>Example yoy taken macbook then that mac hardware support only Mac OS only you can modify that but that's different story but tightly coupled through hardware of macbook so it's monopoly you need to stick
to Mac only right then that time came linux any hardware or any system will support
>>Rhel , centos, Fedora is same redhat family
>>Ubuntu , kali Debian family
>>Amazon linux also and almalinux

2-what is monolpay

>>monoplay is costly ex: take apple system it to much costly why means hardware manfactured by apple and os also manfactured by apple thats it 

3-what is operating system

>>os is an interface between user and the computer and hardware

>>operating system only understand binary language

ex:- windows, os x, solaris
linux(redhat, ubuntu, fedora, suse, debian, centos)

>>linux operating system is open-source and it is comapred to secure than windows you can modify the kernal also

4-how much time to boot up Linux in an AWS

>> Minimum 3 minutes and maximum 5 minutes

5-what is File-System and explain the File-system Architecture

>>Filesystem Hierarchy Standard (FHS), which is a standard for organizing the files and directories
/ -->means it is top-level directory.root folder for liux server 
  -->it is parent directory and it is root directory

/root       -->it is home directory for root user or super user
            -->it provides working environment for root user

/home       -->it is home directory for other users
            -->its provides working environment for other user

/etc        -->Contains system-wide configuration files for various applications and services.

/usr        -->by default software are installed in /usr directory all users,

/bin        -->it contains commands used by all users  cat,vim, touch, cd  -->all user commands here

/boot       --> Contains files related to the boot process, including the Linux kernel, initial ramdisk (initrd), and bootloader configuration. when server is getting started, server refers this directory
and config from grub.cfg

/lib and /lib64:  --> These directories contain shared libraries needed by the system and applications. The "lib64" directory is present on 64-bit systems.

/sbin       -->it contains commands used by only super user (root) 
                    (superuser binary files) -->only root commands will available here root can execute  

/opt:       -->Contains optional software packages installed on the system. Applications installed here are often self-contained in their own directories. optional , manual installation of services or
applications will be downloaded here

/var        -->it containing variable data like mails and logfiles variables --> log files,

dev --> devices --> external devices are mounted here
/media --> cd/dvd drive
/mnt --> extra disks mount here
/proc --> running process will store here with their PID
/proc/cpuinfo
/proc/meminfo
/run --> when server starts, server uses this directory as storage
/tmp --> temp files, not important

6-what is booting process in linux

>>there are 6 stages in booting process 
>>Booting a Linux installation involves multiple stages and software components, including firmware initialization, execution of a boot loader, loading and startup of a Linux kernel image,
and execution of various startup scripts and daemons.
>>BIOS-->basic input output second
>>MBR-->Master boot record
>>GRUB-->Grand Unfied bootloader
>>Kernel
>>Init
>>Runlevel

cheatsheet for short commands https://blog.ssdnodes.com/blog/cheatsheet-bash-shortcuts/ 
shell cheatsheet for https://devhints.io/bash
https://alvinalexander.com/unix/edu/examples/find.shtml   -->useful linux links 

7-how to check kernel version in linux and what is uname command in linux 

>>The uname command is a Unix-like operating system command used to display system information. It stands for "Unix Name" and is commonly used to retrieve details about the underlying operating system.

>>uname -s or uname --kernel-name: Display the kernel name (e.g., "Linux").
>>uname -n or uname --nodename: Display the network node hostname.
>>uname -r or uname --kernel-release: Display the kernel release (e.g., "4.15.0-155-generic").
>>uname -v or uname --kernel-version: Display the kernel version.
>>uname -m or uname --machine: Display the machine hardware name (e.g., "x86_64").
>>uname -o or uname --operating-system: Display the operating system name (e.g., "GNU/Linux").
>>uname -a  -->it will show linux details
>>uname --all  -->it will show all linux details
>>uname --help  -->it will show details how to use
>>man uname  -->it will show details how to use or manually how to use
>>uname -i   -->To check the architecture whether it is 32bit or 64bit

8-where is shell located 

>>/bin

9-types of logins in linux

1-shell login
2-cron login
3-no-shell login

10-how to resetting a root password in linux

step1:-Boot Recovery Mode:-for resetting the root password we need to roboot our computer when system restarts press the "ESC" key immediately to interrupt the boot process and select
the kernel from the GRUB/boot menu you wnat boot into by processing the arrow keys
step2:-Pressing 'e' from your keyboard will open the editing menu
step3:-in the editing menu, locate the "ro" kernal parameter and replace it with "re", and add an additional parameter "init=/sysroot/bin/sh"
step4:-press CTRL+X to enter into the single-user mode once you are done with the previous step
step5:-Now you can run the "chroot/sysroot" command to convert the root file system in read and write mode
step6:-set a nwe password for root input the command (changing the password for user root)
step7:-set a new password for root input the command
step8:-Selabelling(to set the permissions for files or folders)
step9:-exit from termianl
step10:-hit reboot

11-how to check if server virtual or physical.

>>dmidecode | grep Product

12-tell me user types in linux

$  -->normal user
#  -->root user

13-how to linux details and linux release 

>>cat /etc/os-release   -->it will show the relases of your server
>>cat /proc/cpuinfo   -->To check the CPU information
>>cat /proc/meminfo    -->To check the memory information
>>uname   -->it will show which operating system you are using
>>uname -a  -->it will show linux details
>>uname -r  -->it will show releases
>>uname --all  -->it will show linux details
>>uname --help  --> It will show details how to use
>>man uname  -->it will show details how to use or manually how to use
>>uname -i   -->To check the architecture whether it is 32bit or 64bit

14-how to see present directory

>>pwd  -->this command is used to see the present working directory where you are

15-what is who is command in linux 

>>The whois command in Linux is a utility that provides information about a domain or an IP address by querying a WHOIS database. WHOIS is a protocol and a database used to look up information about
domain names, IP addresses, and autonomous systems.
>>whois example.com
>>whois 8.8.8.8
>>whois -v example.com

16-what is difference between su - and su 

>>the difference between `su` and `su -` is that `su` switches to the specified user without running a login shell, while `su -` switches to the specified user and runs a login shell.

17-what is ls in linux command 

>>ls is a Linux shell command that lists directory contents of files and directories
>>ls 
>>ls -la --colour
>>ls -a 
>>ls -A   -->Get list of hidden files and directories.
>>ls -l   -->Get list of files with long format, usually shows properties of a file
>>ls -Al    -->We can combine multiple options as well.
>>ls -A -l   -->it will list the secret files 
>>ls  -->it will show list the files and folders
>>ls -l  -->it will show length format and permissions and size
>>ls  -lr  -->reverse length format
>>ls -ltr   -->time reverse, old to new
>>ls -la   -->it will show hidden and list files
>>ls -ld   -->it will show the directorys only
>>ls /boot   -->it wiil list the contents of the /boot directory
efi grub2 

18-what is shutdown command in linux 

>>The shutdown command in Linux is used to bring the system down in a secure and organized way. It allows the system administrator to initiate a system halt, power-off, or reboot. Properly shutting down
the system is crucial to ensure that all running processes have a chance to save their data and clean up before the system is powered off or restarted.
>>sudo shutdown -h now    -->Immediate Shutdown:
>>sudo shutdown -h 22:30  -->Specifying Shutdown Time:
>>sudo shutdown -c        -->Canceling a Scheduled Shutdown:
>>poweroff   -->this command to shuddown the linux system

19-how to create a file in linux

>>touch anji.txt    -->it will create the file
>>vim anji.txt      -->it will also create the file and open the editor
>>cat > anjii.txt  -->if you enter this will give cursor to enter the data
hi anji  then exist use control+d
>>cat anjii.txt   -->it will show the data of anjii.txt
>>clear  -->it will clear the screen
->   -->if you use this remove old data and add new data
->>   -->if you use this this will add new data old data also will be there 
>>cat anji.txt anjii.txt > anjitest.txt   -->it will copy the data anjitest.txt
>>touch anji.txt sampi.py gampa.yaml    -->it will create this files in a single command single command to create multiple files  
>>touch .anji.txt   -->it will create secret file you can see only if you use this command ls -A -l  

20-how to create a folder in linux

>>mkdir anji  -->it will create the anji folder
>>mkdir anji sampi  -->it will create the anji and sampi directory 
>>mkdir -p anji/sampi   -->it will create anji under sampi folder 
>>mkdir /anji  -->it will create the anji folder 
>>mkdir -p /anji   -->suppose you have given this command but the folder is already there you need to skip that command

21-how to copy the files in linux

>>cp annji.txt anji -->it will copy the anji.txt into anji folder
>>cp /anji/test/*  /home/anji/the/   --->it will copy the files
>>cp anji anji1 -r  -->you can copy folders also but you need to  use -r recursvly
>>cp -r anji  sampi   -->it will copy the anji folder files into sampi folder 
>>cp -r /path/to/anji/* /path/to/sampi/
>>cp -r anji/* sampi/
>>cp anji sampi/    -->it will copy the anji diretory to sampi directory under 

22-how to remove files or folders in linux

>>rm anji.txt  -->it will delete file
>>rm -r anji  -->it will delete the folder if any data is also 
>>rmdir anji   -->it will remove empty directory 
>>rm -rf .*files*;   -->it will remove .files 
>>rm -f anji.txt  -->it will delete the file without asking permissions like yes or no 
>>unlink anji.txt  -->it will also delete the files 

23-how to move files in one folder to another folder

>>mv anji.txt anji/  -->it will move the file into anji folde
>>mv anji.txt test.txt    -->it will rename the file anji to test 
>>mv /path/to/anji /path/to/sampi/   -->move files from anji to sampi 
>>mv anji sampi/    -->moveing anji folder into sampi folder

24-how to see the hardware information in linux 

>>lshw  -->list the hardware details
>>lscpu  -->list the cpus 
>>lsusb  -->list the usb devices 
>>lscpi  -->such as (graphics cards, network adapters)
>>lsblk  -->hard drives and partitions:
>>free -h    -->system's memory usage:
>>df -h   -->disk space usage
>>inxi   -->inxi: If not installed by default, you can install the inxi tool, which provides a wide range of system information in a human-readable format. Run it without any arguments to see an overview
>>hwinfo  -->This command provides hardware information, and you might need to install it if it's not available on your system
>>neofetch  -->Neofetch is a fun and visually appealing command-line tool that displays system information along with an ASCII art logo. You can install and run it like this

25-how to change the one directory to another directory

>>cd   -->change directory 
>>cd anji  -->it will move to another direcctory
>>cd ..   -->it will back to previous direcctory 

26-types of files in linux 

>>it is 7 types (directory is also called file in linux)
1-Directory 
2-Regular file 
3-Block Specail file 
4-Named pipe file 
5-link file 
6-socket file 
7-character special file 

27-what . represent in linux

>>Current Directory: In the context of file paths, a single dot (.) represents the current directory. For example, if you're in a directory and you use ./myfile.txt, it refers to the file myfile.txt
in the current directory.
>>Hidden Files: In Linux, files or directories whose names start with a dot (e.g., .config or .bashrc) are hidden by default. They are not displayed when you list the contents of a directory using ls.
You can view hidden files using the -a option with the ls command, like ls -a.
>>Parent Directory: In file paths, two dots (..) represent the parent directory. For example, if you're in a directory and you use ../file.txt, it refers to a file file.txt in the parent directory.

28-how to rename a file 

>>mv anji sampi   -->it will rename the file anji to smapi

29-how to read the file in linux 

>>cat -n anji.txt   -->it will show the numbers of the file
>>cat anji.txt  -->it will show the file 
>>cat -n /etc/passwd   -->it will show the content of the file along with line numbers
>>tac /etc/passwd   -->it displays the content of the file reverse order 
>>more anji.txt  ##it will also show the content
>>more 4 anji.txt   -->more is also used to see the content of the file 
>>less anji.txt   -->less also use to see the content of the file 
>>Tail is a command which prints the last few number of lines (10 lines by default) of a certain file, then terminates.
>>head -2 anji.txt  ## it will show only two lines of your file
>>head anji.txt ##it will show only 10 lines of your file
>>head -20 anji.txt  ## it will show only 20 lines of your file
>>sed -n '6,12' anji.txt #3it will print 6 to 12 line middle data
>>awk 'NR>=6 && NR<=12 {print}' anji.txt   -->it will show only 6 to 12 line only

30-what is head command in linux

>>head command gives you top lines of the file. it is used to see the inside file data with only some number of line 
>>head -2 anji.txt  ## it will show only two lines of your file
>>head anji.txt ##it will show only 10 lines of your file
>>head -20 anji.txt  ## it will show only 20 lines of your file

31-what is tail command in linux 

>>Tail is a command which prints the last few number of lines (10 lines by default) of a certain file, then terminates.
>>tail /etc/passwd 
>>tail -n 5 /etc/passwd   -->it gives the last 5 lines of the file 

32-what is man command in linux

>>It provides a detailed view of the command which includes NAME, SYNOPSIS, DESCRIPTION, OPTIONS, EXIT STATUS, RETURN VALUES, ERRORS, 
FILES, VERSIONS, EXAMPLES, AUTHORS and SEE ALSO.
>>man echo
>>man whoami
>>man bash
>>man test

33-what is echo command

>>Echo is a Unix/Linux command tool used for displaying lines of text or string which are passed as arguments on the command line
>>\n cut the line it will come in next line

34-what is tee command

>>tee command is used to display the output and also to store that output into a file (it does both the taks simultaneously)
>>ls -let | tee anji.txt

35-what is sort command in linux

>>SORT command is used to sort a file, arranging the records in a particular order. By default, the sort command sorts file assuming the contents are ASCII. Using options in the sort
command can also be used to sort numerically. 

>>sort file.txt   -->it will list the alphabetcal order

36-what is compare command

>>cmp: This command is used to compare two files character by character.
$ cmp file1 file2

37-what is diff command in linux

>>The diff command in Linux is used to compare and find differences between two text files or directories. It highlights the lines that differ between the files and provides a detailed comparison of
the changes.
>>diff file1 file2
>>diff -u file1.txt file2.txt   -->-u or --unified: Display differences in a unified diff format, making it easier to read and apply patches.

38-how to see cpu info in linux

>>cat /proc/cpuinfo

39-how to see the cpu utilization in linux 

>>top          -->it will show the cpu utilization ram and memory and it will show how many service runing in background
>>top -bn1 | grep 'Cpu(s)' | awk '{print $2 + $4}'   -->it will show how much cpu utilization

40-how to see memory info linux

>>free -m 
>>cat /proc/meminfo

41-how to how much disk used in linux 

>>df -h |grep -vE "tmpfs|/dev/sda2|/dev/sr0" | awk '{print $5}'   -->it will see the files in drives how much stoarge used in drive
>>df -h -->The df command displays information about total space and available space on a file system.
>>df -hT    -->it will show the type of harddisk

42-how to check the hardware information in linux

>>cat /proc/meminfo | grep MemTotal
>>cat /proc/cpuinfo
>>dmidecode -s system-serial-number

43-how to see free memory 

>>free 
>>View memory usage: free -h
>>Identify high memory processes: ps -eo pid,ppid,%cpu,%mem,cmd --sort=-%mem | head

44-how to find the which process is running from last one hour and report

>>ps aux | grep "your-process-name"
>>ps aux | grep "your-process-name" | awk -v threshold=$(date -d '1 hour ago' +'%H:%M') '$9 >= threshold'
>>ps aux | grep "your-process-name" | awk -v threshold=$(date -d '1 hour ago' +'%H:%M') '$9 >= threshold' > process_report.txt

45-how to find the files in linux

>>find /etc -name "passwd"  -->it will find the passwd files 
>>find . -type f -size +100M  ##find the large in 100mb
>>find / -name testfile.txt          ##it will find the file  in linux
>>find / -name anji.txt         -->it will locate the anji.txt where exactly availble
>>sudo find / -xdev -type f -size +100M
>>find / -name testfile.txt          ##it will find the file  in linux
>>find /path/to/logs -name "*.log" -type f -mtime +7   -->find the last 7 days old file

46-how to delete old files in Linux

>>find /path_to_file/* -mtime +90 exec rm -rf {} \;
>>find /path/to/search -name "*.log" -type f -mtime +7 -exec rm {} \;        -->delete last 7 days *.logs only

47-what is soft and hard link in cmd or symbolic link

>>Symbolic links (also called "soft" links) are files that point to a file or directory in your system, but don't mirror the other file's data.
>>soft link is an actual link to the original file, whereas a hard link is a mirror copy of the original file. 
>>ln -s /opt/tomcat/bin/startup.sh /usr/local/bin/tomcatup    -->it will create short-cut to start and down the server
>>ln -s /opt/tomcat/bin/shutdown.sh /usr/local/bin/tomcatdown         -->this soft link or symbalic link
>>ln /opt/tomcat/bin/shutdown.sh /usr/local/bin/tomcatdown   -->this hard link  hard link point to Inode and softlink also point to Inode  
>>tomcatup    -->it will start the server
>> If you delete the original file, the soft link has no value, because it points to a non-existent file. But in the case of hard link, it is entirely opposite.
>>A hardlink allows you to chnage the permission on underlying file

48-what is package Management

>>Package management in Linux refers to the process of installing, updating, configuring, and removing software packages on a Linux-based operating system. It is a crucial component of Linux systems
that helps users and system administrators manage software efficiently.
Debian and its derivatives (e.g., Ubuntu) use dpkg for package management, with apt or apt-get as the user-friendly front-end.
Red Hat-based distributions (e.g., CentOS and Fedora) use rpm and yum or dnf as package managers.
SUSE Linux uses zypper as its package manager.
>>yum   -->yellow dog utility manager
>>rpm   -->redhat package manager
>>yum or dnf install httpd -y   -->install package

49-what is difference between yum and dnf 

>>centos 7 = yum default package 
>>centos 8,9 = dnf default package there taking dnf in place of yum dnf will not consume much memory or cpu compared to yum 
>>the major difference between YUM and DNF are mainly in performance. memory usage, and how the code has been rewritten to make it easy for developers to maintain a predictable documentaed API. 
One other difference is that DNF is compatible with python3 where YUM is not 

50-how to list the files or packages

>>yum list   -->it will show the packages
>>apt list   -->it will show the packages
>>yum list | grep httpd     -->it will list htpd package is there or not
>>apt list installed | wc -l  -->it will list the installed packages
>>yum list installed | wc -l 
>>yum list all   -->it will show availble list 

51-how to list installed packages in linux 

>>yum list installed    -->this will show what are the packages are installed 
>>yum list available    -->it shows the available packages ready to install if needs then install 
>>yum list all   -->it will show available and installed packages will show  
>>if you see @ after any package after that package is installed 

52-how to remove any package in linux 

>>yum remove nginx -y   -->it will remove the nginx package into the linux 

53-how to update particular package and how to check that package is available for update 

>>yum check-update   -->it will show the updates for available
>>yum update nginx -y   -->it will update that package
>>yum update -y   -->it will update all the packages 

54-how to upgrade the linux 

>>yum upgrade -y   ##it will upgrade the version it will some time to upgrade 

55-where this packages is installed in linux 

>>in linux it will install centralized repository in linux 
>>cat /etc/yum.repos.d/*.repo  or cat /usr/bin /usr/sbin /usr/lib -->sometimes   -->this redhat 
>>cat /usr/bin  /usr/sbin /usr/lib -->sometimes -->it is ubuntu 

56-here the repos will be stored in redhat

>>cd /etc/yum.repos.d   -->in this Place repos will be stored if you want create then create in this place and save like this 
>>vim mysql.repo

:wq
>>dnf install mysql-community-server -y

57-what is systemd service file

>>A systemd service file is a configuration file used by the systemd init system in many modern Linux distributions to define and manage services, daemons, and other system tasks. Systemd is a system
and service manager that plays a central role in the boot process and service management on Linux systems. The service file specifies how a service should be started, stopped, and managed by systemd.

>>vi /etc/systemd/system/catalogue.service 
[Unit]
Description = Catalogue Service

[Service]
User=roboshop
Environment=MONGO=true
Environment=MONGO_URL="mongodb://<MONGODB-SERVER-IPADDRESS>:27017/catalogue"
ExecStart=/bin/node /app/server.js
SyslogIdentifier=catalogue

[Install]
WantedBy=multi-user.target
:wq

>> for example your installed fornted and mongodb service then that mongod must talk this catalogue service right you need to give endpoint of mongod 

58-how to add the .repos in redhat to install in single command 

>>cd /etc/yum.repos.d/
>>vi jenkins.repo
[jenkins]
name=Jenkins-stable
baseurl=http://pkg.jenkins.io/redhat-stable
gpgcheck=1
:wq
>>yum install jenkins -y 

59-how to which software is installed in linux 

>>yum list installed   -->this will show the which software is installed

60-what is rpm command in linux 

>>The rpm command is a package management tool used in Red Hat-based Linux distributions."RPM" stands for "Red Hat Package Manager." The rpm command is used to perform various operations related to 
software packages in these distributions
>>rpm -ivh package.rpm   -->Installing Packages: You can use rpm to install software packages.
>>rpm -Uvh package.rpm   -->Upgrading Packages: You can upgrade an installed package to a newer version using rpm.
>>rpm -e package_name    -->Removing Packages: To uninstall a package, you can use rpm
>>rpm -ql package_name   -->Listing Files in Packages: You can list the files contained within a package using rpm.
>>rpm -qR package_name   -->Querying Package Dependencies: You can check package dependencies to see which other packages are required for a package to function properly

61-what is gpgcheck is enabled 1 or 0 

>>if you enabled=0 then it will check the gpg check then you need to give gpgcheck=1
>>if you enabled=0 then if you give gpgcheck=0 then it will not check  
1-means enabled 
0-means disable  

62-what is service managment in linux

>>Services are programs or processes that run on your server at all times, usually from the time a server boots up. They are used to provide persistent support for requests and monitoring,
from other processes or external clients.
>>systemd is a system and service manager for Linux operating systems. systemctl is a command to introspect and control the state of the systemd system and
service manager. Not to be confused with sysctl.

>>systemctl start nginx   -->this will start the service
>>systemctl status nginx  -->this can check the status
>>systemctl stop nginx   -->this will stop the service
>>systemctl restart nginx  -->this will restart the service
>>systemctl enable nginx   -->if you given this whenever service reatart automatically start the service

63-how to see the last login users deatils in linux

>>To view the last login details for a user in Linux, you can use the last command
>>The last command in Linux is used to show a list of previously logged-in users, including information about their login sessions. It displays details such as the user's login name, terminal, 
IP address (if available), login time, and logout time (if the user has logged out). The last command reads from various log files, such as /var/log/wtmp, to generate this information.
>>last -->show the list of users loggin deatils 
>>last -n 10 -->last -n 10 shows the last 10 logins.
>>last -a   -->To display the full hostname of the remote login machine (if available), you can use the -a option:
>>last username   -->To display the logins for a specific user, you can provide the username as an argument
>>last -R  -->To display the list in reverse order, showing the oldest entries first

64-how to which user is loged in linux

>>who am i  -->if you type this you will get your ip which usertho login ayyva telistundi

65-how to clear the last login details in a linux

>>cp /dev/null /var/log/lastlog   -->this clear the last login details 

66-how many types of users exist in linux by default

>>3 types root-user, local-users, system-users

67-how to switch one user to another user 

>>su - anji  ##it will switch anji user
>>exit ##it will exit the anji user 

68-how to chnage hostname in linux 

>>set-hostname anji  -->it will change anji hostname 
>>vi /etc/hostname    -->it will change permanently 

69-what is true command  

>>if you use true command anywhere it will nothing do for example you run test case in jenkins 

>>true 
>>echo $?
0 -->it will give exist status zero means it is suceess
npm test || true  ##in this place npm test is faile then we use true command to sucessed that pipeline.it will give exist status zero means it is suceess 

70-by default packages pre-insatlled in linux or not how explain 

>>when you insatlling the OS the vendor declare a file mention some package that package automatically install when we booting the OS 

71-what is type command in linux

>>In Linux, the type command is used to determine how a particular command will be interpreted or executed by the shell. It provides information about whether a command is an internal shell command,
an external executable, a shell alias, or a shell function. It helps you identify the type and location of the command that will be executed when you run it.
>>type ls   -->This will show you whether ls is an alias, a function, a built-in command, or an external executable

72-what is user management, file management, log management

>>User Management:
User management involves the administration and control of user accounts on a system. It includes tasks such as creating and deleting user accounts, assigning user privileges 
and permissions, managing user passwords, and enforcing security policies. User management ensures that users have appropriate access to resources while maintaining system security.

>>File Management:
File management refers to the organization, storage, and manipulation of files on a computer system. It involves tasks such as creating, modifying, deleting, and moving files and 
directories.File management also includes setting file permissions, managing file attributes and metadata, and ensuring proper backup and recovery procedures are in place. 
Effective file management ensures efficient storage and retrieval of data and helps maintain data integrity and security.

>>Log Management:
Log management involves the collection, analysis, and storage of log data generated by various system components, applications, and services. Logs record events, errors, and activities 
occurring within a system, which are valuable for troubleshooting, auditing, and security purposes. Log management includes tasks such as configuring logging parameters,
centralizing log data, performing log analysis and correlation, setting log retention policies, and monitoring log files for anomalies or security incidents. It helps administrators 
gain insights into system behavior, identify issues, and ensure compliance with security policies and regulations.

73-what is usermod command in linux

>>usermod command or modify user is a command in Linux that is used to change the properties of a user in Linux through the command line. After creating a user we have to sometimes change
their attributes like password or login directory etc.

>>usermod -G john anji          -->anji added into john group

>>useradd anji  -->it will add anji user and automatically create the group also
>>passwd anji  -->it will ask to create the password for anji
>>id       -->it will present user details
>>root user id is 0 
>>id anji   -->see the user information like group 
>>groupadd anji  -->it will create the group
>>usermod -a -G sampi anji  -->anji added into the sampi group
>>usermod -g sampi anji   -->it will add sampi primary group dont use -a 
>>gpasswd  -d anji sampi   -->delete the anji user in sampi group
>>groupdel sampi  -->deleting the sampi group
>>sudo chage -M 30 anji -->it is used to set user only one password for 30 days only
>>sudo chage -d 0 anji  -->it is used to set user can change the password when we login the 
>>chown john anji    -->give owner premission to anji folder
>>chgrp devops anji  -->changing some other group to devops in anji folder 
>>chown john:john anji  -->giving owner and group to john user along with anji folder  

--user not able to acess using password based authentication need enable

>>vi /etc/ssh/sshd_config

passwordAuthentication yes

:wq  -->this will not encourage the organizations do this below

>>ssh-keygen -f anji  -->it will create the anji ssh keys public and private 
then adminstartor will add the public keys into the linux system 

>>ec2-system 
>>su -kumar
>>mkdir .ssh
>>ls -la
>>chmod 700 .ssh -R
>>cd .ssh
>>touch authorized_keys
paste the public key of your system
:wq
>>chmod 400 authorized_keys
>>exit
>>
>>cd ..
>>usermod -a -G wheel anji   -->anji added into the wheel group get root access
>>vi /etc/sudoers
anji ALL=(ALL) NOPASSWD: ALL
:wq   -->then user get root permisssions 

>>local system
>>ssh -i anji(private-key) anji(user)@14.25.23.56
he can login into the anji user

--user exist organisation

first remove him from primary and secondary group

>>gpasswd -d <username> <group-name>
>>usermod -g <user-name(default-group or own group)> <username>
>>userdel <user-name>
>>groupdel <group-name>

74-what is permissions management 

>>Permission management in Linux refers to the control and regulation of access to files, directories, and system resources to ensure security, privacy, and proper functioning of the operating system.
Linux uses a robust permission system to define who can perform various actions on files and directories. These permissions are primarily governed by three attributes:

1-User (Owner): The owner of a file or directory has the most control over it. They can read, write, and execute the file or directory, as well as change its permissions.

2-Group: Each file or directory belongs to a group, and users who are members of that group have specific permissions. Group permissions are separate from the owner's permissions.

3-Others (World): This category includes all other users on the system who are neither the owner nor members of the group. These users have a separate set of permissions.

75-what is chroot command in linux

>>chroot command in Linux/Unix system is used to change the root directory. Every process/command in Linux/Unix like systems has a current working directory called root directory. 
It changes the root directory for currently running processes as well as its child processes.

76-what is chmod command in linux

>>The chmod (short for change mode) command is used to manage file system access permissions on Unix and Unix-like systems. There are three basic file system permissions, or modes, 
to files and directories: read (r) write (w) execute (x)

1-symbolic method

>>user   -->the one who created
>>group  -->which group
>>others  -->other than owner and group

-                  rw-     rw-      r--
<file/directory>   [user/owner]  [group]  [others]

r   -->read access
w   -->write acess
x   -->execute

>>chmod u+x  anji.tf  -->it will give executable access
>>chmod g-w  anji.tf  -->it will remove the executable access
>>chmod o+x  anji.tf  -->it will give permission to other usersonly executable not read write
>>chmod ugo+x anji.tf   -->every one will execute access

2-Absolute method

Read - 4    
Write - 2
Execute - 1

>>chmod 777 anji.txt        -->it will give full permission 
first 7 user/owner second 7 group last 7 others

>>chmod 754 anji.txt   -->
7 read write execute into user
5 read execute into group
4 execute only others 

>>chmod 764 anji.txt         -->it will read write user and read write group and read in others 
first 7 user/owner second 6 group last 4 others

>>chmod 666 anji.txt          -->it will give read write only
>>chmod 400 anji.text  -->it is read access only

>>chmod 000 anji.txt          -->there is no permission to owner also

>>chmod 777 /home/john        -->any user go to this directory and create the files and anything
>>sudo anji

>>cd /home/john          -->anji can go and do anything in john directory
>>sudo su -
>>chown john:john anji.txt         -->this file Owner of john user transfering ownership 
>>chown john anji    -->give owner premission to anji folder
>>chgrp devops anji  -->changing some other group to devops in anji folder 
>>chown john:john anji  -->giving owner and group to john user along with anji folder  

77-what is chown command in linux

>>The chown command changes the owner of the file or directory specified by the File or Directory parameter to the user specified by the Owner parameter. 
>>chown  --->change ownership
>>chown john:john anji.txt         -->this file Owner of john user transfering ownership 

78-how to create a user and create a password and also group and add that group into user

>>useradd  john              -->it will add john user
>>passwd john              -->it will create the password
john
john
>>useradd  anji             -->it will add john user
>>passwd anji              -->it will create the password
anji
anji
>>usermod anji  -->it will modify the anji name
>>userdel anji   -->it will delete the anji
>>groupadd anji     -->it will create the anji group
>>groupdel test  -->it will delete the group
>>groupmod -n test1 test  -->it will modify the group name test to test1
>>gpasswd -d anji test    -->it will remove the anji in test group
>>useradd -g test1 anji
>>passwd -d anji    -->it will remove the anji password 

 
>>cat /etc/groups              -->it will show group

>>usermod -G john anji          -->anji added into john group
>>vi /etc/ssh/sshd_config

password authentication yes

:wq          -->it will give login permission to user anji

79-what key need to upload into ssh server

>>ssh-keygen 
>>cd .ssh
>>ls
>>ssh-copy-id user@15.26.27.26  ##it will copy the public key 
>>ssh 15.26.27.26

80-without password how can access linux machines

>>you need to create the sshkey it is uses in rsa alogirthum it will create 2 files public key file named . ssh/id_rsa. pub and a private key file named . ssh/id_rsa.
you can add that public key into the remote server you must enable the password less authentication in remote servers
>>vi /etc/ssh/sshd_config  
passwordauthentication yes
permitrootlogin yes
#passwordauthentication no  -->you need comment this 
>>scp -r /home/anji.tx  2.54.25.2:/root/anji    -->it will send the file  
two ways to send the file password less like add your ssh keys in destination server or password authentication need to give password

>>ssh-keygen
>>press enter
>>press enter
>>ls -a
>>cd .ssh
>>ls
>>ssh-copy-id anji@172.31.38.167   -->it will ask passwd give next time it will not ask do same in remaing systems

81-how to solve the user-login issues in linux

>>useradd anji 
>>passwd anji
password   -->password is created 
1-first verfiy user have privilages to login permissions in password or ssh key based this command will help you to see the permission
cat /etc/passwd | grep anji
>>/home/test:/sbin/nologin  -->nologin usernot able to login to the account
2-check password policys
3-check login failues or clear login failures
>>if you type 3 to 5times wrong password then need to unlock the user
>>pam_tally2 -u anji -->it will show the user login details count 
>>pam_tally2 -u anji reset    -->it will delete the clear the login details 
4-if login name longer it will name display the full username because of the username shows only 8 lines 
5-sshd issues 

82-how to delete the user password 

>>passwd -d anji  -->it will delete the anji user password 

83-how to see the user password details like when he want change the password and complexity & password expiry date

>>chage -l anji    -->it will show the details 
sudo chage -M 30 anji -->it is used to set user only one password for 30 days only
sudo chage -d 0 anji  -->it is used to set user can change the password when we login the 

84-create a user in linux in that user need only login access and file creation only user creattion only dont give any permission to delete a user or files in linux

1-sudo useradd anji   -->Create the user:
2-sudo passwd anji   -->Set a password for the user:
3-sudo mkdir /home/anji   -->Create a home directory for the user:
4-sudo chmod 700 /home/anji   -->Grant read and execute permissions for the user:
5-sudo usermod -s /bin/bash anji  -->Set the user's shell:
6-sudo groupadd anji        -->if your not adding into the any group this user he dont get any installtion updates of the systems  
7-sudo usermod -aG anji anji   -->Limit group membership:
8-sudo chown anji:anji /home/anji   -->Make the user the owner of their home directory:

85-assuem user dont need to install anything or update in the linux how we can achive this 

>>Restrict User from Installing Software or Updates:
Ensure the user is not added to the sudoers group, which grants superuser privileges. By default, regular users do not have sudo access. You can verify this by checking the sudo group membership:
sudo groupadd anji        -->if your not adding into the any group this user he dont get any installtion updates of the systems  

86-what is sudoers file in linux what having in sudoers file in linux

>>In Linux, the sudoers file is a crucial configuration file that controls and manages user privileges related to the sudo command. The sudo command allows users to execute commands with superuser (root) 
privileges, provided they have the necessary permissions and are listed in the sudoers file.

>>vi /etc/sudoers
# User privilege specification
root    ALL=(ALL:ALL) ALL

# Allow members of the 'admin' group to execute any command
%admin  ALL=(ALL:ALL) ALL

# Allow a specific user to run only a specific command as another user
jane    ALL=(bob) /bin/ls

# Allow a specific user to run commands as other users without a password
joe     ALL=(ALL:ALL) NOPASSWD: ALL
:wq

87-how can i lock the user accounts

>>usermod -s /sbin/nologin anji  -->your putting anji user into nologin section anji not able to login
>>usermod -s /bin/bash   -->it will give login permission   
>>passwd --lock anji   -->it is used to lock the anji user
or 
>>usermod -L anji
>>passwd --unlock anji  -->it is used to unlock the anji user
or 
>>usermod -U anji
>>Using the passwd Command:

Open a terminal and execute the following command as the root user or with sudo privileges:

>>sudo passwd --lock username

Replace username with the name of the user account you want to lock.

This command locks the user account by placing an asterisk (*) or an exclamation mark (!) in the password field of the /etc/shadow file, depending on the system configuration.
Modifying the /etc/shadow File:

Open the /etc/shadow file in a text editor using root privileges, such as:

>>sudo nano /etc/shadow

Locate the line corresponding to the user account you want to lock. The line will contain the username and an encrypted password.

Replace the encrypted password field with an asterisk (*) or an exclamation mark (!).

Save the file and exit the text editor.

>>By using either method, you effectively lock the user account, preventing the user from logging in. The user will receive an error message if they attempt to log in with their password.

>>It's important to note that locking a user account is different from deleting it. The locked user account's settings and files will still exist on the system, and you can unlock the 
account later if needed by reversing the steps above.

88-Can i gave specific user only install and start the process yes you can using visudo file

>>Create user anji sampi set password
>>Add this two user into gampa group
>>Then open visudo file
>>Group lines is there paste this 
%gampa ALL=(ALL) /usr/bin/yum, /usr/bin/systemctl and save
>>Try to login you will get this permission only
>>Which yum will give the path
>>Like this what command you need copy that path and paste in visudo file
>>He will get the command access
>>Dont modify every time visudo instead of you can do this file
>>Vi /etc/sudoers.d/devops
Here you can paste that command it will work
%gampa ALL=(ALL) /usr/bin/yum, /usr/bin/systemctl, /usr/bin/useradd
>>If any case if you want delete group no need open visudo you can delete the cd /etc/sudoers.d
>>rm devops 
>>Like this they loose the permission of user who ever in that group

89-there are three types of users in linux A1 needs permission ftp telnet and ssh, B1 user needs ssh only,C1 needs telnet only how would you provide

>>Edit sudoers file vi /etc/sudoers
A1 ALL=NOPASSWD:/bin/ftp,/bin/telnet,/bin/ssh
B1 ALL=NOPASSWD:/bin/telnet
C1 ALL=NOPASSWD:/bin/telnet
:wq  -->login as user and check 

90-what is GUID

>>The GUID is short for Group User ID, which means this permission allows the file or directory to set the same permissions as the group in which that file or directory is present.

91-what is SUID

>>SUID or Set Owner User ID is a permission bit flag that applies to executables. SUID allows an alternate user to run an executable with the same permissions as the owner of the 
file instead of the permissions of the alternate user.

92-what is ssh

>>the ssh protocal (also referred to as secure shell) is a method for secure remote login from one computer to another computer.
it provides the secure connection to network. it provides several alternative options for strong authntication, and it protects the 
communications security and integrity with strong encryption
>>port number is 22
>>configuration file path is /etc/ssh/sshd_config
>>to change port number is possible /etc/ssh/sshd_config then restart the service sshd restart
>>if your firewall  SELinux is enabled then write the rule if firewall for new port number otherwise dont allow this 

93-how does port forwarding works in SSH

>>client is going  to connect using differnet port number (in this case 2048)other than default, but server ssh service will respond on default port. we have to use ssh -p 2048 from
client machine
>>ssh port forwarding
>>ssh server port forwarding using firewall redirection

94-what are differnet data manipulations techniques support by SSH

>>symmetric 
>>Asymmetric encryption method

95-how to take ssh in a system 

>>ssh-keygen -f anji  -->it will create the anji ssh keys public and private 
>>ssh centos@<public-ip-address>

96-how to limit SSH access to specific subnet

>>limiting SSH access to specifc subnet will gives more secure environment other than gives subnet network can't access SSH server.
Edit sshd_config file and add subnet as mentioned 20 ssh

Ex:-192.168.4.0/24

97-what do you mean by SSH cipher. tell me different types of ciphers

>>cipher is an algorithum to perform encryption and encryption 
>>what ever the data will be send the data wil be SSH it will encrypted in client side and decrypted the server-side 
Types of ciphers
1-3des
2-Blowfish
3-des

98-how to check the ssh version

>>ssh -V

99-where SSH will store its trusted ssh client keys

>>By default when ever your trying to connect to remote SSH host for the first time it will ask you to confirm YES/No as soon as we say yes it will copy public key pair to ./ssh/known_hosts

100-SSH session idle timeout -auto logout

>>ClinetAliveInterval 15m
>>ClinetAliveCountMax 5

101-how to disable root login for ssh server

>>disabling the root login for ssh is very secure way. we can do that by editing ssh configuration file /etc/ssh/sshd_config then change permitrootlogin no

>>permitrootlogin no

102-how to enable on key based authentication

>>this feature provides more /high security because any user can't login without SSH key

>>RSAuthentication yes
>>PublicAuthentication yes

103-how to see which user is logged in 

1-who Command: The who command displays information about currently logged-in users, including their usernames, terminal or session, login time, and originating IP address. 
>>who
2-w Command: The w command provides a summary of currently logged-in users, along with additional details such as the load average and uptime. Open a terminal and run the 
>>who
3-users Command: The users command lists the usernames of currently logged-in users.
>>users
4-last Command: The last command displays a list of recently logged-in users and their login history. By default, it shows the last entries from the /var/log/wtmp file
>>last
5-/var/run/utmp File: The /var/run/utmp file contains information about current user sessions. You can parse the file to extract details about logged-in users
>>who -a /var/run/utmp

104-how will get to know user have a root access

>>To determine if a user has root access or administrative privileges on a Linux system, you can check their group membership, the sudo configuration, or examine the system logs. 
1-Group Membership:
>>grep -E '^sudo:|^wheel:' /etc/group
2-Sudo Configuration:
>>sudo visudo
3-System Logs:
>>sudo grep username /var/log/auth.log

105-how to check which user is using more process.

>>ps -e -o user= | sort | uniq -c | sort -nr   -->flag can list all processes on the system, including the user associated with each process.
>>pgrep -u username   --> command can be used to find processes based on various criteria, such as the user who owns them
>>pgrep -u username | uniq -c | wc -l   -->This will display the number of processes owned by the user.

106-how to find users have root access

>>sudo cat /etc/sudoers    -->file contains the configuration for users and groups that have sudo (superuser do) privileges
>>getent group sudo    -->Check the sudo group: On some systems, a group named sudo or admin is created during installation
>>getent group wheel    -->Check the wheel group: On some Linux distributions, the wheel group is used to grant administrative privileges. 
>>cat /etc/passwd    -->Look for user entries with shells associated with administrative accounts.

107-when user creates how it works

>>When a user is created in a Linux system, several steps are involved to set up the user account and provide access to the system. Here's a high-level overview of the process:
1-User Creation Command: A user account is typically created using the useradd or adduser 
>>sudo useradd username
2-User Account Configuration: When the user account is created, various configuration files and directories are created or modified to set up the user's environment. This includes:

User Home Directory: A home directory is created for the user, typically located at /home/username. This directory serves as the user's default working directory and contains user-specific
files and configurations.

User ID (UID) and Group ID (GID): A unique user ID (UID) and primary group ID (GID) are assigned to the user. These IDs are used for permissions and access control.

User Configuration Files: Configuration files such as .bashrc, .profile, or .bash_profile are created in the user's home directory to customize the user's shell environment and set
up default behavior.

User Password: The user's password is set using the passwd command. The user is prompted to enter a password, which is then encrypted and stored in the system's password database 
(e.g., /etc/shadow).

3-User Privileges and Permissions: The user account is assigned appropriate privileges and permissions based on system policies and user requirements. This includes group membership, 
access to files and directories, and rights to execute certain commands with administrative privileges using sudo.
4-System Resources: Depending on the system's configuration, system resources such as disk space, CPU usage limits, and memory quotas may be allocated for the user account.
5-Login and Access: Once the user account is set up, the user can log in to the system using their username and password. The user gains access to their home directory and any other 
permissions granted by system administrators.

108-what is Absolute path and relative path 

>>C/user/anji/anji.pem this absolute path
>>cd anji 
>>Ssh -i Anji. Pem ec2-user@46.78.87.90 this relative path because your in same folder that folder have key anji.pem in previous absolute path you mention the folder details right that is absolute path

109-what is CRUD

>>In computer programming, create, read, update, and delete are the four basic operations of persistent storage. CRUD is also sometimes used to describe user interface conventions that
facilitate viewing, searching, and changing information using computer-based forms and reports.

C    -->Create
R    -->Read
U    -->Update
D    -->Delete

110-what is route command 

>>The route command is a networking utility used in various operating systems (including Unix-like systems such as Linux and macOS) to display or manipulate the IP routing table. The routing table is a
set of rules that define how the operating system should forward network traffic. It determines the path that network packets take from the source to the destination.
>>route -n
>>sudo route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.0.1
>>sudo route del -net 192.168.1.0 netmask 255.255.255.0

111-Network Route Configuration: Description: Configure network routes. 

Commands:
• Add a network route: sudo ip route add <network> via <gateway>
• Remove a network route: sudo ip route del <network>

112-which command is used to get ip in linux

>>ipconfig 
>>ip addr show
>>ifconfig or ip addr show
>>ip a    -->it will show the ip address 

113-what is crontab

>>In any operating system it is possible to create jobs that you want to recoccur. this process know as job-scheduling
for nay linux this process is handled by the cron service or daemon called crond
>>this can be done using the cron daemon linux by editing the crontab file you can specify the exact time for script to be executed 

* * * * *
minutes, hours, day-of-month, month, day-of-week

>>crontab -e

#execute a job 8:30 on everyday moening

30 8 * * * echo "1" >> /tmp/file1

#execute a job at 2:00pm on every saturday

00 14 * * 6 echo "2" >> /tmp/file2

#execute a job at 12:00AM on 1st july

00 00 01 06 * echo "3" >> /tmp/file3

#execute a job at 3:30PM on every month 25th
 
30 15 25 * * echo  "4" >> /tmp/file4

* * * * *             #it indicates the everyday and every second

:wq

114-how to see the history in linux

>>history

115-how to delete all the process in linux

>>kill PID 
>>kill process_name
>>pkill process_name
>>kill -9 "pid"
>>kill commands 60+ is there 9 is used to kill the service
>>killall

116-how to stop all services in linux command

>>sytemctl stop -all

117-how to clear history in linux

history -c

118-how to see the file size in linux

>>du -h anji.txt

119-how to see the folder size in linux

>>du -h -->it will list the folder size in linux

120-how you can see if the port is opened or not in linux

>>netstat -a    -->it will check the currently running listening and non-listning with open ports
>>netstat -a | grep -i 8000     -->to check the port opening and listening
>>netsta -t   -->it will show all the tcp connections and protocol name 
>>netstat -l
>>netstat -n    -->it will show the port number along with IP it will not show the protocol name
>>netstat -r   -->it will show routing tables of my system
>>netstat -o  -->it will process name and path
>>telnet "ip" port
>>yum install net-tools -y  -->it will install net-tools netstat
>>netstat -anp | grep :80   -->it will check the port is open or run
>>List listening ports: netstat -tuln
>>Check specific port: netstat -tuln | grep <port_number>
>>netstat -lntp  -->it will check which port is opening 

121-how to check the process port and name(netstat -tulnp)

three ways to check
>>netstat -ltnp | grep -w ':80' 
>>lsof -i :80
>>fuser 80/tcp

122-what is ACL in linux

>> Access Control Lists (ACLs) were intended to resolve. ACLs allow us to apply a more specific set of permissions to a file or directory without (necessarily) changing the base 
ownership and permissions. They let us "tack on" access for other users or groups.

123-what are the ACLS and firewall and selinux

>>A network access control list (ACL) is made up of rules that either allow access to a computer environment or deny it. In a way, an ACL is like a guest list at an exclusive club. 
Only those on the list are allowed in the doors.

124-how to check the public ip in linux

>>curl ifconfig.co  -->it will show the public ip of your system

where the packages or installed softwares stored

>>/usr/local/bin or /usr/bin or /usr/local/sbin or /usr/sbin

125-how to see the processor list in linux

>>nproc -->it will show how many processor list

126-what is process management

>>when you start a program running an application in linux it actually run as a process
>>whatever you do linux create a PID. in linux everything is a process
>>PID -->process instance id
>>ps -->process from your terminal
>>ps -e  -->it will show the process
how can you list out the procee in linux server
ps -ef
>>ps -ef        -->it is like task manager in linux
>>free -m | awk '/^Mem:/{print $3/$2 * 100}'   -->it will show the how much memory free in the linux
>>top          -->it will show the cpu utilization ram and memory and it will show how many service runing in background
>>top -bn1 | grep 'Cpu(s)' | awk '{print $2 + $4}'   -->it will show how much cpu utilization
>>df -h |grep -vE "tmpfs|/dev/sda2|/dev/sr0" | awk '{print $5}'   -->it will see the files in drives how much stoarge used in drive
>>df -h -->The df command displays information about total space and available space on a file system.
>>df -hT    -->it will show the type of harddisk
>>cd /bin
>>du -sh *  -->it will show the how much memory used in folders 
>>foreground   -->which runsin the terminal stick to terminal we cant do anything
sleep 300 &  -->it will run backgound
>>background  -->it will runs in background
>>View disk space: df -h
>>Identify large directories: du -sh * | sort -hr | head

>>ps -ef | grep sleep  -->it will search sleep in 

>>service jenkins status        -->it will show thr pid

>>kill 1665           -->it will the jenkins service or request stop
>>kill -9 1665  -->it is forcefully delete the service

127-what is the pid of root user 

>>0 is the PID of root user 

128-what is TOP command and how to fetch the data

>>top displays a continuously updating screen showing system summary information and a list of processes sorted by CPU usage.

Use the following keys to interact with the top command:

q: Quit top and exit.
k: Kill a selected process.
f: Choose which fields to display or sort by.
r: Renice (change priority) of a selected process.
u: Display processes for a specific user.

>>View CPU usage: top or htop
>>Identify high CPU processes: ps -eo pid,ppid,%cpu,%mem,cmd --sort=-%cpu | head
>>top -b -n 1 > top_output.txt
this command is used to fetch the data

129-what is Zombie process

>>a zombie process refers to any process that is essentially removed from the system as 'defunct', but still somehow resides in the processor's memory as a 'zombie'

130-how to check zombie process

>>ps -aux | grep -z

131-what is PS command in linux 
 
>>The ps command in Linux is used to view information about running processes on the system. It provides a snapshot of the currently executing processes, including their Process IDs (PIDs),
CPU and memory usage, parent-child relationships, and other relevant details. The ps command is a versatile and essential tool for process management and system monitoring
>>ps   -->To display information about all processes running in the current terminal session
>>ps aux  -->display a detailed list of all processes running on the system, including those from other users
>>ps axjf   -->To display a tree-like structure of processes, showing parent-child relationships
>>ps -U username   -->To show a specific user's processes, replace "username" with the actual username
>>ps -p PID1,PID2,PID3   -->To list processes by their Process IDs (PIDs)
>>ps aux --forest   -->To continuously update the process list, similar to the top command
>>ps -ef        -->it is like task manager in linux
>>ps -e  -->it will show the process

132-how to see whether another server is accepting the request like port no 22 or not

>>you can telnet 31.33.78.52 80   -->it will help you to show whether is accept or not
>>it will check whether the port is open or not if the ip connected then the port is open 

133-how many ports there in network

>>0-65535 ports

134-is it possible to add the secondary ip in linux

>>Open /etc/network/interfaces. An example of the file is below: (Screen 1)
>>Below the line: auto eth0. Add the following line: ...
>>Below the first interface description iface eth0 add the description of the second interface: iface eth0:1 inet static. address 207.210.118.58
>>You can add an additional IP address permanently to your system by editing the file /etc/netplan/50-cloud-init. yaml. In the above output, 
you should see that the IP address 192.168. 0.101 is assigned to the interface.

135-how to check whether the server is running or not connecting 

1-check the server is runing or not (ps -ef)
2-check the port is open or not (netstat -lntp)
3-check the ports open security group or not 
4-in case if that service is accessed  by another server then you can check the reachability using telnet 14.98.164.230
5-restart the services or server 
6-repeat step 4
7-finally you can check the server 

136-i need to get an ipaddress of dns name using linux command

>>nslookup example.com
>>dig example.com

137-what is the differnet between Telnet & SSH

Telnet:-
1-data goes on network as plan text
2-default port 23
3-Bandwidth usage is less compare to SSH

SSH:-
1-data will be encrypted using key pair like (public and private)
2-default port 22
3-bandwidth is high compared to telnet To SSH

138-how to do port-forwarding in linux

>>systemctl start firewalld 
>>systemctl enable firewalld
>>firewall -cmd --permanent --add-rich-rule 'rule family=ipv4 source address=192.168.2.44/24 forward-port=153 protocal=tcp to-poet=132'
>>firewall-cmd --reload
>>firewall-cmd --list-all   -->153 port forward into 132 port 

139-how to block ip address the ip address in linux

>>ip tables and firewalls
>>sudo iptables -A INPUT -s <IP_address> -j DROP
>>sudo iptables -A INPUT -s 192.168.0.100 -j DROP
>>sudo apt-get install iptables-persistent
>>sudo iptables -D INPUT -s <IP_address> -j DROP

140-how to configure your dns servers in linux achine

>>yum install bind bind-utils
>>vi /etc/named.conf
127.0.0.1 then chaage your dns servers

141-how to see the ssh port number is opened folder or you want change the port number

>>cat /usr/lib/firewalld/services/dns.xml

142-Key Log Locations: Description: Locate important log files for troubleshooting. 

Commands:
• System log: /var/log/syslog
• Apache access log: /var/log/apache2/access.log
• MySQL error log: /var/log/mysql/error.log

143-Firewall Testing: Description: Verify if firewall rules are allowing/denying traffic correctly. 

Commands:
• Check firewall status: sudo ufw status
• Test connectivity to a specific port: telnet <host> <port>

144-Archive Management (tar): Description: Create and extract tar archives. 

Commands:
• Create a tar archive: tar -czvf archive.tar.gz /path/to/directory
• Extract a tar archive: tar -xzvf archive.tar.gz

145-Mounting Volumes: Description: Mount external volumes to the Linux filesystem. 

Commands:
• List available volumes: lsblk
• Mount a volume: sudo mount /dev/sdX /mnt/mountpoint

146-Network Interface Configuration: Description: Manage network interfaces and configurations.

Commands:
• View network interfaces: ifconfig or ip addr show
• Restart network service: sudo systemctl restart networking

147-Network Connectivity Testing: Description: Test network connectivity to a specific host. 

Commands:
• Ping a host: ping <host>
• Check if a port is open: nc -zv <host> <port>

148-Kernel Parameter Modification: Description: Modify kernel parameters for performance tuning. 

Commands:
• View current kernel parameters: sysctl -a
• Modify a kernel parameter: sudo sysctl -w <parameter>=<value>

149-Disk I/O Monitoring: Description: Monitor disk I/O performance. 

Commands:
• View disk I/O statistics: iostat -d
Monitor real-time disk I/O: iostat -d 1

150-Network Bandwidth Monitoring: Description: Monitor network bandwidth usage. 

Commands:
• View network interface statistics: ifstat
• Monitor real-time bandwidth: ifstat -i <interface_name>

151-Disk Check and Repair: Description: Check and repair file system errors on disks. 

Commands:
• Check disk for errors: sudo fsck /dev/sdX
• Repair disk errors interactively: sudo fsck -y /dev/sdX

152-System Reboot: Description: Reboot the Linux system. 

Commands:
• Reboot immediately: sudo reboot
• Schedule a reboot: sudo shutdown -r <time>

153-Apache Configuration Test: Description: Test the Apache configuration for syntax errors. 

Commands:
• Test Apache configuration: sudo apachectl configtest

154-Firewall Configuration: Description: Configure firewall rules. 

Commands:
• Add a firewall rule: sudo ufw allow <port>/<protocol>
• Remove a firewall rule: sudo ufw delete allow <port>/<protocol>

155-System Service Logs: Description: View system service logs. 

Commands:
• View service logs: journalctl -u <service_name>

156-System File Integrity Check: Description: Verify the integrity of system files. 

Commands:
• Check file integrity: sudo debsums -c

157-NTP Server Configuration: Description: Configure a Linux server as an NTP server. 

Commands:
Install NTP server: sudo apt install ntp
• Configure NTP server: sudo vi /etc/ntp.conf

158-DNS Resolution Issues: Description: Troubleshoot DNS resolution problems. 

Commands:
• Check DNS server configuration: cat /etc/resolv.conf
• Test DNS resolution: nslookup <domain>

159-SELinux Configuration: Description: Manage SELinux settings. 

Commands:
• Check SELinux status: sestatus
• Change SELinux mode: sudo setenforce 0 (permissive mode)

160-what are the file systems in linux

>>ext1
>>ext2

161-how to do the networking using nmcli

what is nmcli:-nmcli (networkmanager command line interface)or packet manager command-line utility is used for controlling network manager ip address and dns for the system and 
reporting network status

>>systemctl enable networkmanager
>>nmcli connecction show --active
>>nmcli device status 
>>nmcli device show ens33   -->its show the details
>>nmcli connection add type ethernet ifname enpos8  -->ethernet type will create and its create unique id
>>nmcli connection show  -->it will show the list of ethernet
>>nmcli connetcion up ethernet-enp0s8   -->it will enable the ethernet
>>nmcli connection show --active  -->it will show the up device in that my ethernet is there
>>nmcli connecction modify ethernet-enp0s8 ipv4.address 192.168.4.26/24   -->to change the linux system ip address
>>nmcli connecction modify ethernet-enp0s8 ipv4.method manual
>>nmcli device show enp0s8

>>nmcli general status  -->Overall status of NetworkManager
>>nmcli general hostname geeklab.example.com  -->Changing the hostname
>>nmcli general permissions  -->View permissions a caller has for various operations
>>nmcli general logging  -->Change NetworkManager logging level
>>nmcli general logging level DEBUG domains IP4
>>nmcli general logging level INFO domains ALL

>>nmcli networking  -->Check networking status and enable/disable it
>>nmcli networking off
>>nmcli networking connectivity check  -->Check the network connectivity state

>>nmcli radio  -->Check Radion Switch status
>>nmcli radio wifi off  -->Disable Wi-Fi in NetworkManager

162-how you can change the ip address of linux system

>>ip address for a linux system will be changed by using the nmcli 
>>need to install nmcli
>>nmcli connecction modify ethernet-enp0s8 ipv4.address 192.168.4.26/24   -->to change the linux system ip address
>>nmcli connecction modify ethernet-enp0s8 ipv4.method manual
>>nmcli device show enp0s8

163-how to create a tar backup

>>tar -cvf anji.tar /home/test/anji/.   -->it will create the tar file only
c -->create the archive
f -->name the archive
v -->show the process verbosely
z -->compressed gzip archive files
>>tar -cvzf anji.tar.gz /home/test/anji/.  -->it will create the tar.gz file
>>tar --exclude file.txt --exclude test.sh -cvfz annji.tar.gz /home/test/anji/.  -->it will exclude this two files
>>Create a tar archive: tar -czvf archive.tar.gz /path/to/directory
>>Extract a tar archive: tar -xzvf archive.tar.gz

164-what is tuning of linux systems

>>the profiles provided with tuned are divided into two categories: power-saving profiles and performance-boosting profiles
1-low latency for stoarge and network
2-high throughput for storage and network
3-virtual machine performance
4-virtualization host performance

>>apt install tuned
>>systemctl enable --now tuned
>>tuned-adm list  -->it will list the service what you need to use
>>apt install tuned-profiles-realtime
>>tuned-adm active
>>tuned-adm verfiy
>>tuned-adm profile selected-profile
>>tuned-adm profile virtual-guest powersave

165-how to improve your linux system with performance issues

>>by using tunned application with the help for perform better performance
>>by powersave and better performance and battery performance

166-How many groups can a user join in Linux?

>>Linux system users can have a maximum of 15 secondary groups. A Linux system's groups are stored in the /etc/group file.

167-what is nohup and &

>>if you use nohup it will help you to run the background your commands in the foreground
1-nohup
>>The nohup command stands for "no hang-up." When you run a command with nohup, it allows the command to keep running even if the terminal session is closed or disconnected. 
It prevents the process from receiving the HUP (hang-up) signal, which is normally sent to processes when the controlling terminal is closed.

>>nohup python myscript.py &

2-& (ampersand):
>>The & symbol is used to run a command in the background. When you append & at the end of a command, it starts the command in the background, allowing you to continue using 
the terminal without waiting for the command to finish.

>>python myscript.py &

168-how to assign the process the required amount of resource allocation

>>n Linux, you can assign the required amount of resource allocation to a process using various methods and tools. Here are a few common techniques:

1-Nice Value (CPU Priority):The nice command allows you to adjust the CPU scheduling priority (niceness) of a process.
2-CPU Affinity:CPU affinity controls which CPU cores a process is allowed to run on.
3-Control Groups (cgroups):Control Groups (cgroups) is a feature in the Linux kernel that enables resource allocation and management for groups of processes.
4-Process Priorities:Linux assigns dynamic priorities to processes that determine their access to the CPU.
5-Resource Limiting:The ulimit command sets resource limits for specific processes or the entire system.

169-what is load average in the linux systems and what does three components of load average defines

>>In Linux systems, the load average refers to the average number of processes in the system's run queue over a specific time period. It provides an indication of the system's workload
and can help determine if the system resources are being adequately utilized. The load average is displayed as three numbers, often seen as three values separated by commas, representing
different time intervals.
1-1-minute Load Average:
2-5-minute Load Average:
3-15-minute Load Average:

170-what is pipe command 

>>pipes are used to send the output of one command to another command without storing the content anywhere physically on disk 
>>  | piping one command will store the data that will forward to another command using pipe symbol in linux
cat /etc/paswd | grep root 

171-how to see the time and modify details in file in linux 

>>stat anji.txt 
>>stat -x anji.txt 

172-how to print date in linux

>>date +"%Y-%m-%d"   -->it will print year month date

173-everyday one directory created by name date month year delete the directory in last 2 days before 

>>mkdir anji
>>mkdir 2018-12-24 2018-12-25 2018-12-26 2018-12-27 2018-12-28 2018-12-29 2018-12-30 2018-12-31 2019-01-01
>>ls-ltr
vi test.sh

174-Is it possible to change file date and time

touch -d "Mon 1 Mar 2020 12:30:00" marchfile   -->it will create the file in mar 1 2022 file name using this command the file craete onthat date like mar 1 2020
touch anji   -->it will create anji file 12 clock it created
touch -am anji  -->it willupdate write now time
touch -r sampi anji   -->it will sampi file refernce and that time will updated to anji if sampi 12 2022 then anji file also 12 2022
stat anji         -->it will show modification dates
stat -x anji      -->it will show the modification details

175-can i use man instead of help in linux 

>>You can use man or help this two commands are same it will show command details how to use that command

176-how many ways to see the groups in linux 

>>cat /etc/group 
>>getent group it will show groups

177-what is fdisk -l command in linux 

>>The fdisk -l command is a Linux/Unix command that is used to list the partitions on one or more hard drives. It provides information about the disks and their partition tables, including details
such as partition sizes, types, and start/end sectors.

178-where we can see the logs in linux 

>>cd /var/log
>>cat /var/log/auth.log  -->by using this you can see which user logged
or 
>>cat /var/log/last

179-Log File Monitoring: Description:Monitor log files in real-time for troubleshooting. 

>>Tail and follow a log file: tail -f /path/to/logfile
>>Key Log Locations: Description: Locate important log files for troubleshooting. 

180-what is Logrotate

>>logrotate is designed to ease administration of systems that generate large number of log files, to rotate log file based on file size, time and date .it allows rotation that is 
automatic compression, removal and mailing of log files. each log file may be handled hourly daily weekly monthly or when its grow large

181-What is syslog server Linux?

>>Syslog is a protocol and utility for capturing and logging system information. This system information can be stored locally, remotely, or both. syslog allows a server to forward 
log messages over the network to SL1. SL1 then uses these messages to monitor the health of the server and trigger events (if necessary).
>>you can create the one main server like syslog-server like central and have client-servers also like grafana
>>cd /var/log
>>vi /etc/syslog.conf  -->it will show what type of logs where stored like boot.log and lastlog and maillog and cron logs details also 
>>apt install syslog
>>systemctl status syslog

182-what is Daemons 

>>Daemons play a crucial role in the background operation and management of computer systems, servers, and networks. They help provide essential services, maintain system stability, and 
automate tasks without requiring direct user involvement.
>>Daemons are designed to perform specific tasks or provide services on a computer or server.Background Process: Daemons run in the background, often starting automatically when the 
computer or operating system boots up.
1-No User Interaction
2-System Services
3-Independent and Autonomus 
4-Log Output

183-what is SElinux

>>Selinux stands for security enhanced linux which is an access control system that is built into the linux kernel. it is used to enforce the resouce policies that
define what level of access users, programs and service have on a system

SELINUX=enforcing|permissive|disabled

>>sestatus   -->it will show the selinuxstatus
>>vi /etc/selinux/config
disable to enable
>>sudo reboot
>>sudo setenforce 0

184-what is inode in linux how to increase it

>>inode (index node) is a data structure that stores metadata about a file or directory. It is a fundamental concept in the file system that helps in organizing and managing files.
>>Inode is the representation of file and folder inside the memory it is a number 

>>File Type: The inode specifies whether it represents a regular file, directory, symbolic link, device file, or other file types.
>>File Permissions: Inodes store permission bits that define the access rights for the file, indicating which users or groups can read, write, or execute the file.
>>Ownership Information: Inodes store the user ID (UID) and group ID (GID) of the file's owner and group.
>>File Size: The inode stores the size of the file in bytes.
>>Timestamps: Inodes keep track of various timestamps associated with the file, including the last access time, modification time, and status change time.
>>Pointers to Data Blocks: Inodes contain pointers or references to the actual data blocks where the file's content is stored on the disk.

>>Inodes provide a way for the file system to efficiently locate and manage files. They serve as an index or reference to the actual file data and metadata stored in data blocks. 
By using inodes, the file system can quickly access and retrieve information about files and directories.

>>The total number of inodes that a file system can hold is determined during the file system creation. The inode table, which stores all the inodes, has a fixed size, and each inode
consumes a certain amount of space. Therefore, the number of available inodes affects the total number of files that can be created in a file system.

>>Understanding inodes is particularly important when managing file system resources, such as monitoring disk usage, determining file system limitations, or diagnosing issues related 
to file metadata or storage allocation.

Checking the Inode Usage:-
>>df -i
Increasing the Disk Inode Number
>>sudo mkfs -t ext4 -N 10000000 /dev/sdb1
Creating a New File System
>>sudo mkfs -t ext4 -N 10000000 /dev/sdb1
Mounting the New File System
>>sudo mount /dev/sdb1 /mnt/data
Moving the Existing Files
>>sudo rsync -a /data/ /mnt/data/
Updating the File System Table
>>/dev/sdb1   /mnt/data   ext4   defaults   0   2

185-what is logical volumes in linux and how to create it

>>In Linux, Logical Volumes (also known as LVM, Logical Volume Manager) is a storage management technology that provides a flexible and dynamic way to manage disk space. It allows you to 
create, resize, and manage logical volumes independently of the underlying physical storage devices (hard drives or partitions).
>>Logical Volumes sit on top of physical volumes (disks or disk partitions) and provide an abstraction layer that makes it easier to manage storage resources. This abstraction allows you
to combine multiple physical volumes into volume groups and then create logical volumes within those volume groups. Logical volumes can be dynamically resized and moved without the need 
to repartition the disks or disrupt the system.

1-Check Available Disks/Partitions: First, ensure that you have the required disks or partitions available for creating the logical volumes. You can use commands like fdisk -l, lsblk, or
parted -l to list the available disks and their partitions.

2-Create Physical Volumes (PVs): If you have unused partitions, you can initialize them as physical volumes using the pvcreate command. For example:
>>sudo pvcreate /dev/sdb1
3-Create Volume Group (VG): Once you have physical volumes, you can create a volume group that spans one or more physical volumes using the vgcreate command. For example:
>>sudo vgcreate my_vg /dev/sdb1 /dev/sdc1
4-Create Logical Volume (LV): With the volume group created, you can now allocate space for logical volumes within it using the lvcreate command. For example:
>>sudo lvcreate -L 10G -n my_lv my_vg
5-Format and Mount the Logical Volume: Once the logical volume is created, you can format it with a file system (e.g., ext4) using the mkfs command and mount it to a directory using 
the mount command. For example:
>>sudo mkfs.ext4 /dev/my_vg/my_lv
>>sudo mount /dev/my_vg/my_lv /mnt/my_mount_point
6-Updating /etc/fstab: To ensure the logical volume is mounted automatically during system boot, you need to add an entry to the /etc/fstab file. For example:
>>/dev/my_vg/my_lv    /mnt/my_mount_point    ext4    defaults    0    2

186-how will you reduce the LVM size explain the procedure

>>comments fstab entry safer side
>>unmount the file system
umount /anji
>>run e2fsck to resolve any file system errors
e2fsck -f /dev/VG0/lv
>>Resize the file-system
resize2fs /dev/VG0/1v 400
>>reduce LVM size
lvreduce -L 400M /dev/VG0/lv
>>uncomment fstab entry by editing fstab file
mount -a
>>check the file df -h 

187-how to manage the diskspace, RAM, and memory

1-Disk Space:

Monitor Disk Usage: Use tools like df and du to monitor disk usage and identify any directories or files consuming excessive space. Regularly check disk usage to prevent reaching full 
capacity.

Clean Up Unnecessary Files: Remove unnecessary or temporary files using tools like rm or find command. Pay attention to log files, cached files, and old backups that may consume disk space.

Manage Log Files: Ensure log rotation is configured to prevent log files from growing indefinitely. Logrotate is a useful tool for managing log files and compressing or deleting older logs.

Delete Unused Packages: Remove unnecessary software packages and libraries using package management tools like apt or yum. Unused packages can occupy disk space over time.

2-RAM (Random Access Memory):

Monitor RAM Usage: Use tools like top, htop, or free to monitor the RAM usage on your system. Identify processes consuming excessive memory.

Optimize Process Memory Usage: Analyze memory usage of applications and processes and optimize them if possible. This may involve tuning application settings, reducing memory allocations,
or optimizing database queries.

Use Caching and Swapping: Linux uses disk-based caching and swap space to optimize memory usage. Configure swap space appropriately to allow the system to swap idle processes or pages
to disk when memory becomes limited.

Adjust Swappiness: Swappiness determines how aggressively the system swaps memory pages to disk. Adjust the swappiness value to balance between swapping and keeping more data in RAM.
The default value is usually suitable for most systems, but it can be tuned if necessary.

3-Memory (Virtual Memory or Page File):

Monitor Memory Usage: Use tools like top, htop, or free to monitor the memory usage, including the virtual memory (page file) usage.

Adjust Virtual Memory: Ensure the virtual memory (page file) is appropriately configured. It acts as an extension to physical RAM and allows the system to store data that 
doesn't fit into RAM. The virtual memory configuration is typically managed by the system automatically, but you can adjust it if necessary.

Add Physical Memory: If your system frequently suffers from memory shortages, consider adding more physical memory (RAM) to increase the overall capacity and performance.

Identify Memory Leaks: Monitor for memory leaks in applications or services. Memory leaks can cause memory usage to increase over time and lead to performance issues. 
Troubleshoot and fix any identified memory leaks.

188-Your linux server is running slower than usual.what steps can you take to identify and resolve the issue

>>Start by examining CPU usage with a tool like top,htop, or atop. check I/O opeartions and memory usgae look for wapping which could significantly reduce performance check system logs
in /var/log/ to identify any software or hardware errors

189-An application is unable to write to a file on a linux server how would you diagnose the problem

>>Check the permissions on the file to ensure te application has write access. you might also need to check if the file is locked by another process or if the filesystem is read-only due
to disk issues

190-What is fsck in Linux?

>>fsck stands for "file system check" and it is used to check and optionally repair one or more Linux file systems

191-how to disable fsck check in during boot

1. Begin tapping any key when your PC loads.
2. When GRUB menu opens, navigate to your main kernel (usually first in the list), and hit e to open up boot arguments.
3. Navigate to kernel /vmlinuz line
4. Append fastboot to the end of the line
After that, you can hit Ctrl-X, F10, or either of the two depending on your Linux distribution, to boot. fsck check will not run this time.

Block fsck check on a disk partition
To permanently disable fsck check on a hard disk partition, you need to edit the /etc/fstab file. There are two values you are looking for: dump and pass. Dump is used to determine whether
the partition needs to be dumped, and Pass is used to determine the order in which the partitions need to be checked. Setting both to 0 will tell fsck to skip checking the partitions.

So, open /etc/fstab:

nano /etc/fstab
Find the line with the partition that is being checked:
# UUID=9059c3d1-86a8-43b1-8e2b-0231ef4af6cc / ext4 defaults 1 1
Change the dump and pass values to 0 and 0:
# UUID=9059c3d1-86a8-43b1-8e2b-0231ef4af6cc / ext4 defaults 0 0

Finally, hit Ctrl-O and Ctrl-X to save and exit. FSCK will not run on the partition in question during subsequent boots.

192-what is the entry of fstab

>>In Linux, an entry of the “fstab” file comprises six different columns, that are, “file system”, “mount point”, “type”, “options”, “dump”,
 and “pass”. Each entry performs a specific task and has its own value in the “fstab” file structure.

193-how to add shell user during user creation

>>By default, the new user's login shell is set to the one specified in the /etc/default/useradd file. In some distributions the default shell is set to /bin/sh while in others it is set
to /bin/bash .
 The -s ( --shell ) option allows you to specify the new user's login shell.

194-what is fencing in linux

>>Fencing is the disconnection of a node from the cluster's shared storage. Fencing cuts off I/O from shared storage, thus ensuring data integrity.

195-cron is not working even though everything fine

1-Verify Cron Daemon Status: Ensure that the cron daemon is running on your system. Use the following command to check the status of the cron service:
>>systemctl status cron
>>systemctl start cron
2-Check Cron Job Syntax: Review the syntax of your cron job entries. Make sure they follow the correct format and are located in the appropriate cron configuration files
(/etc/crontab, /etc/cron.d/, or the user's crontab). Consider using the crontab -e command to edit the user's crontab and ensure that the entries are correct.
3-Check User and Environment: Confirm that the cron job is running under the correct user context and has the necessary permissions to execute the specified command or script. 
Remember that the cron environment may differ from the interactive shell environment, so ensure that any required environment variables and paths are set correctly in the cron job itself.
4-Logging and Error Reporting: Enable logging for cron jobs to capture any error messages or output. In the cron job entry, redirect the output to a log file or use the MAILTO option to 
receive error notifications via email. For example:
>>* * * * * /path/to/command >> /path/to/logfile 2>&1
check the system log files (/var/log/syslog, /var/log/cron, or /var/log/messages) for any related error messages.
5-System Time and Timezone: Ensure that the system time and timezone are correctly configured. Cron relies on the system clock for scheduling. If the time or timezone is incorrect, 
it can lead to cron jobs not executing at the expected times.
6-Check Security Restrictions: Some systems have security measures in place that restrict cron job execution. Verify if there are any security policies, such as SELinux or AppArmor, 
that may be blocking the execution of cron jobs. Review the relevant configuration and adjust the settings if necessary.

196-what is lun scan in linux

>>While Working on the Linux boxes, sometimes the Linux admin has to scan new storage or LUNs assign to the server from the Storage team. In Redhat Linux and CentOS we can scan the 
LUNs either using the script 'rescan-scsi-bus.sh' or using the '/sys/class' files without rebooting the server.

197-what is difference between software raid and hardware raid

>>The key difference between software RAID and hardware RAID is that software in the OS manages the former, while controllers independent from the OS manage the latter. 
They are also different in cost, performance and access speeds.

198-what happens  we log into shell getty

>>When you log into a shell getty, it triggers a series of actions that allow you to interact with the operating system through a command-line interface. Here's what happens when you 
log into a shell getty:
1-User Authentication: When you enter your username and password at the getty prompt, it authenticates your credentials against the system's user database (such as /etc/passwd or a 
centralized authentication system like LDAP or Active Directory). If the authentication is successful, you proceed to the next step.
2-Initialization: Once authenticated, the getty program sets up the initial environment for the user session. It initializes the user's shell environment variables, sets the current
working directory to the user's home directory, and sets up the terminal or console settings.
3-Execution of Shell: getty spawns a new shell process for the logged-in user. The shell process is usually determined by the user's default shell specified in the user's account 
configuration. Common shells include Bash, Zsh, Fish, and others.
4-Interaction with the Shell: After the shell process is started, you can interact with it through the terminal. The shell displays a command-line prompt where you can enter commands 
and interact with the operating system. The shell interprets your commands, executes them, and provides output accordingly.
5-User Session Management: The shell session manages the user's interactions with the operating system. You can execute commands, run programs, navigate directories, modify files, 
and perform various administrative or user-specific tasks based on the permissions and privileges associated with your user account.
6-Termination: When you're finished with your session, you can terminate the shell by entering the exit command or pressing Ctrl+D. The shell process exits, and control returns to 
the getty program, which is ready to accept new login requests.

>>Overall, the getty process is responsible for authenticating users and starting the user's shell session, allowing them to interact with the operating system through a command-line 
interface.

199-if password not created what will be in shadow

>>If a password is not created for a user, the corresponding entry in the /etc/shadow file will typically contain a placeholder value indicating that the password is locked or disabled. 
The exact format and representation may vary depending on the Linux distribution and configuration.

In most cases, the password field in the /etc/shadow file will be set to an encrypted string that indicates the account is locked or the password is disabled. Some common representations
include:

! or *: These characters are often used to indicate that the account is locked or the password is disabled. It prevents the user from logging in using password-based authentication.

!!: This is another common representation to signify a locked account or a disabled password.

These placeholder values indicate that the user cannot log in using a password. Instead, alternative authentication methods such as public key authentication or single sign-on may be
required.

It's important to note that even if the password field in the /etc/shadow file is set to a placeholder value, other user attributes and settings may still be present and functional, 
such as the user's home directory, UID/GID, and shell configuration. The user account can potentially be enabled and password-based authentication re-enabled by updating the /etc/shadow 
file or using user management tools.

200-what is swapspace in linux

>>Swap space in Linux, also known as "swap," is an area on a hard drive or SSD used as virtual memory when the physical RAM (Random Access Memory) in a system is fully occupied. When the operating system
needs more memory resources than are physically available, it uses a portion of the hard drive space as a temporary storage area for data that would typically reside in RAM.
Virtual Memory Extension: Swap space extends the amount of virtual memory available to the operating system. When applications and the operating system need more memory than the physical RAM provides,
data that is not currently being used actively can be moved to the swap space to free up physical RAM for more immediate tasks.

Types of Swap Space:

Swap Partition: Historically, swap space was often allocated in a dedicated partition on the hard drive.
Swap File: In modern Linux systems, swap space is often configured as a swap file within the filesystem. This provides more flexibility as swap space can be easily resized or even added dynamically.
Swap Management: The Linux kernel manages the swapping of data between physical RAM and swap space. When a system runs out of physical memory, it starts moving less frequently accessed data (pages)
from RAM to swap space and back, as needed.

Performance Considerations: While swap space prevents out-of-memory errors and allows the system to continue functioning, using swap excessively can severely impact performance. This is because
reading/writing to swap is much slower than accessing data from RAM. Excessive swapping can lead to a condition called "thrashing," where the system spends the majority of its time swapping data 
in and out of swap space, significantly slowing down overall performance.

Swappiness: Linux systems have a swappiness setting that determines how aggressively the kernel moves processes from RAM to swap space. A lower swappiness value (e.g., 10) means the system will try
to use physical RAM before resorting to swap space, while a higher value (e.g., 60) makes the system more willing to swap out data.

how to create a swaping a disk

>>fdisk /dev/sdc
>>press enter n
>>press enter p
>>enter >>p
>>+2G
>>p 
>>t 
>>82 is code 
:wq
>>partprobe  /dev/sdc
>>fdisk -l /dev/sdc   -->it will swap memory 2GB

201-what is SWAP and how to clear it

>>Swap is a space on a computer's hard drive that is used as virtual memory by the operating system. When the system's physical RAM (Random Access Memory) becomes full, the operating system
can temporarily move less frequently used data from RAM to the swap space. This frees up RAM for more immediate and active processes.

1-Disable Swap: First, you need to disable the swap space to prevent new data from being written to it
>>sudo swapoff -a
2-Clear Swap Space: Once the swap is disabled, you can clear the swap space by overwriting it with zeros
>>sudo dd if=/dev/zero of=/swapfile bs=1G count=<N>
3-Recreate and Enable Swap: After clearing the swap space, you can recreate and enable it.
>>sudo mkswap /swapfile
>>sudo swapon /swapfile
4-Update /etc/fstab for Persistence: To ensure that the swap space is enabled automatically during system boot, update the /etc/fstab file. Open the file in a text edito
>>/swapfile   none   swap   sw   0   0

202-how to partition a linux system into 1tb to 500gb another drive 

>>fdisk -l or lsblk 
>>Identify the device name of your 1 TB hard disk. It will typically be something like /dev/xvdb or /dev/xvdc.
>>Type n to create a new partition.
>>Choose the primary partition type (usually the default, press Enter).
>>Specify the starting and ending sectors. For a 500 GB partition, you might specify +500G as the ending sector.
>>Type t to change the partition type (if needed) and set the file system type.
>>Type w to write the changes to the disk and exit.
>>After you've created the partition, you should have a new partition (e.g., /dev/xvdb1)
>>sudo mkfs.ext4 /dev/xvdb1   -->You need to create a file system on the new partition. The following example creates an ext4 file system:
>>sudo mkdir /mnt/mynewdrive   -->Create a directory where you want to mount the new partition.
>>sudo mount /dev/xvdb1 /mnt/mynewdrive  -->Mount the new partition to this directory
>>vi /etc/fstab
/dev/xvdb1 /mnt/mynewdrive ext4 defaults 0 0
:wq   -->To ensure the partition is mounted at boot, add an entry to the /etc/fstab file. Edit the file using a text editor (e.g., sudo nano /etc/fstab)
>>df -h   -->You can verify that the partition is correctly mounted by running

203-how to extend swap file system.

>>swapon --show  -->check current swap
>>sudo fallocate -l 2G /newswapfile   -->create new swap
>>sudo mkswap /newswapfile   -->Format the Swap File
>>sudo swapon /newswapfile   -->Enbale the new Swap file
>>swapon --show   -->Verify the New Swap Space
>>/newswapfile   none   swap   sw   0   0   -->Update /etc/fstab for Persistence
>>sudo swapon --priority 10 /newswapfile   -->Adjust Swap Priority (Optional):

204-how to attach volume

>>launch ec2 instance
>>creat new volume and attach to ec2 instance  4gb
>>sudo su -
>>lsblk            -->to see the list of drives
>>df -h            -->to see the list of drives
>>fdisk /dev/xvdf                        
>>mkfs.ext4 /dev/xvdf1
>>mkdir /anji          -->createing drive name anji
>>mount /dev/xvdf1  /anji/
>>nano /etc/fstab

/dev/xvdf1   /anji/  ext4 defaults,noatime  1  1

:wq

>>restart the system you can check the drive attached or not
>>sudo su -
>>lsblk
you will see the drive and files

===if your not added in fstab the system is restarted the file is here but it will not show how to do that

>>sudo su -
>>mount /dev/xvdf1    /anji
>>nano /etc/fstab

/dev/xvdf1   /anji/  ext4 defaults,noatime  1  1

:wq

>>then it is done if the restart or done anything

===how to add extra storage 4gb to 6gb adding 2gb

>>adding extra 2gb in aws console then go the linux
>>sudo su -
>>growpart /dev/xvdf1  
>>resize2fs /dev/xvdf1

===how to unmount and detach ec2-volume

>>sudo su -
>>umount /anji
>>then go to aws console deattach to volume to instance

205-how to mount AWS s3 bucket in linux is it possible

>>its not good idea its not recommended way but you can do this 
>>yum install gcc gcc-c++ openssl-devel libstdc++-devel curl-dvel libxml2-devel mailcap s3fs-fuse fuse fuse-devel fuse-libstdc
>>need to create the s3 bucket
>>need to create the access_key and secret_key paste in your local machine vi .passed-3fs
>>then run this command below
>>chmod .passwd-3fs
>>mkdir s3bucket   -->create folder in linux
>>s3fs anji159258 /s3bucket -o passwd_file=/root/anji/.passwd-3fs
>>df -h you will see the mount s3 bucket    -->anji159258 is bucket name

206-what type of files are typically in the /etc directory

>>/ect directory contains configuration files 

207-what will do thic command ls -l one >two

>>take a long listing of a file called one saving the output into the file called two

208-what would you include on the command line to start a program running in the background

>> &

209-in the following shell script how many times will the time command run

>> 2 times it will run

210-what is the default file system in the linux

>>ext4 is the default file system

211-how to run system load history in linux

vi test.sh
HOSTNAME=$(hostname)
DATE=$(date "+%d-%m-%Y %H:%M:%S")
SYSTEMLOAD=$(uptime | awk '{print $9,$10,$11}')
CPULOAD=$(top -b -n 2 -d1 | grep "CPU(s)" | tail -n1 | awk '{print $2}')
MEMORYUSAGE=$(free -m | grep Mem: | tail -n1 | awk '{print $2,$3}')
DISKUSAGE=$(df -p | colum -t | awk '{print $5}' | tail -n 1 | sed 's/%//g')
:wq
>>you can use this crontab or use this ansible using all servers you will get notifications

212-your executing some shell script some commands are not working while executing the script but didnt give any error how to exit if any command not execute any error come 

>>you can use set -e command then it will exit if any command give any error or not executing that command

213-write a shell script to get disk usage

#!/bin/bash

# Shell script to display disk usage

# Get disk usage and store the output in a variable
disk_usage=$(df -h)

# Display the disk usage information
echo "Disk Usage Information:"
echo "$disk_usage"

214-what is variables in linux or shell-script

>>variables are useful to store data in shell script andd later we can use them if they required
>>if we assign a name to set of data is called varibale
>>where we use this variables this word used so many places we can use variables we can call that variables if any chance that changes that in variables everywhere it changed using variables
two types of variables
1-system variables:-
>>created maintained by operating systems itself
>>this type of variables are define in CAPITAL LETERS
>>set   -->it will show the variables
>>set | grep BASH
ex: HOME,USER
2-user-define variables:-
>>created and maintained by the user
>>this type of variables are defined combination lower and upper case dont use upper case
>>dont provide space on either sides of equal symbol
ex: x=4 or x =4 or x = 4 or x= 4
EX:-for shell script
name=anji
class=DevOps   -->you can access this using $class then it will call 
vi anji.sh
#print the varailbe
echo trainer - $name 
echo tech - ${class}
:wq
>>bash anji.sh 
trainer - anji
tech - DevOps 
>>variables can have only characters a-z,A-Z,0-9,_(underscore)
>>special character are not allowed 
>>A varibale should not start with a number and it can start with a underscore 
>>variables by default will not have any data types
>>Everything is s String 
>>As a user you should know that what data would come, since there is no data types  

ex:-
1-readwrite variable 
a=10
echo $a -->it will print 10 
a=20
echo $a   ->it will print 20 it will not give nay error 

readonly a 
echo $a   -->it will give only 20
a=30  -->now it throws any error a is Already used . just restart then you can use if you want use a onemoretime many more times 

2-scalr
a=(10 20)
echo ${a[0]}   -->it will print 10 only 
echo ${a[1]}   -->it will print 20 only 

3-local 
a=(10 20)
export a 
echo ${a[0]}    -->export is used all the functionalitys majorly we using . ex your a in local but your using some bash script variable also same value when you executing it will through error 
insted using a="value" use export then it will execute the command withour throughing any errors  

215-how to add permanent variable  in linux

global:-
1->>To set a system-wide environment variable in /etc/environment, you can edit the file and add a line like this
MY_VARIABLE="my_value"
>>After modifying the file, you may need to reboot or re-login for the changes to take effect.
user-specified
>>To set a user-specific environment variable in ~/.bashrc, you can add a line like this
export MY_VARIABLE="my_value"
>>After making changes to the user-specific file, the user will need to log out and log back in or run source ~/.bashrc to apply the changes
1-temporary
>>export MY_VARIABLE=value
>>echo $MY_VARIABLE
2-Permanent Environment Variables (for future sessions):
For a single user:
>>echo 'export MY_VARIABLE=value' >> ~/.bashrc
>>source ~/.bashrc
For all users:
>>echo 'export MY_VARIABLE=value' > /etc/profile.d/my_variable.sh
Passing Environment Variables to Shell Scripts:
vi anji.sh 
#!/bin/bash
echo "My variable value: $MY_VARIABLE"
:wq
>>bash anji.sh 

216-how to add environment variables into java

vi .bash_profile
>>M2_HOME=/opt/maven
>>M2=/opt/maven/bin
>>JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.12.0.7-0.amzn2.0.2.x86_64
>>PATH=$PATH:$HOME/bin:$JAVA_HOME:$M2_HOME:$M2
:wq

>>echo $PATH
>>source .bash_profile

217-what is export command in linux

>>In Linux, the export command is used to set an environment variable, making it available to other processes and shell scripts. Environment variables are variables that are accessible to programs 
and scripts running in the current shell session. When you export a variable, you're essentially making it global and accessible to child processes of the current shell
export MY_VARIABLE="Hello, World!"
#!/bin/bash

echo "The value of MY_VARIABLE is: $MY_VARIABLE"

218-what is curl command in linux  

>>it is command line browser. modt of the times you need to browse urls to and fetch that content to command line.some times we need to partial information of the URL 
or the full information. curl command is available to browse the content over command line 
>>Curl command is used to print the content in the terminal and install some files or tools and excute some of the command to access internet from local terminal with accessing browser

>>curl www.google.com 
>>curl -o /tmp https://github.com/anji/teamall574.git -->-o works as wget 

219-what is wget command in linux 

>>The wget command in Linux is a command-line utility for downloading files from the internet. It is a versatile tool for retrieving files using various network protocols, including HTTP, HTTPS, FTP,
and more. wget is available on most Unix-like operating systems, including Linux.
>>wget http://example.com/file.zip
>>Save File with Different Name:wget -O my_file.zip http://example.com/file.zip
>>Download in the Background:wget -b http://example.com/largefile.zip
>>Recursive Download (Website Mirroring):wget -r -np http://example.com/
>>Limit Download Speed:wget --limit-rate=200k http://example.com/largefile.zip

220-how to use vim command

>>Vim is a highly configurable, powerful, and efficient text editor available on various Unix and Unix-like operating systems, including Linux. It is known for its extensive functionality and customizable
features, making it a popular choice among developers, system administrators, and other power users
editors like vi, vim, gedit, emacs  
>>vi as three modes 
1-esc mode
2-insert mode 
3-colon mode 
>>vim anji.txt   -->you can edit the file or if the file exist it will open if not it will create
vim  -->visually improved full form
:set nu   -->display numberswise
:set nonu  -->remove numbers form the file
:set ic  -->case insensitive
:set noic  -->case sensitive
:wq  -->exit the file
:wq!  -->exit the file
:q!  -->when you write something but that is wrong then you can use this exit it will not save 
:100  -->it will go on line number 100
:u   -->undo it will keep as it is if you press u all remove wat you write
:yy  -->yank/copy 
:ctrl+p  -->paste the line
:dd  -->cut the lines
:10dd  -->cut the 10 lines
:10 p  ->it will paste 10 lines 
:2s/anji/sampi  -->it will remove anji and replace sampi in first line of the anji
:%s/anji/sampi/g  -->it will replace anji where it is replace with sampi
:%d   -->it will delete entire content

221-what is cut command

>>the cut command is a powerful tool to extract parts of each line from a file
its base on
>>byte position
>>character position
>>fields based on delimiter
>>cut -c 4 /etc/paswd  ##it will show only 4 th line your file 
>>cut -c 1,6 /etc/passwd   ##it will show only 1-6 lines only in the file
>>cut -c 10 /etc/passwd    ##it will show only first 10 lines
>>cut -c 4- /etc/passwd  ##it will show the after 4 to remaing files
>>cat test.txt   ##cut command will work on tab command other wise it will consider the fild separtor or same
anji   okok   okty
yjjk   ooll   uujj
hghh   iioo   kkkk
exit
>>cut -f 2 test.txt
okok
ooll
iloo  ##it wil show this things
>>cut -f 1.3 test.txt
anji      okty
yjjk      uujj     ##it will show only 1 and 3 words in a line
hghh      kkkk
>>cut -d ':' -f -4 /etc/passwd

>>echo https://github.com/anji/teamll574.git | cut -d /-f1
>>https  is the output
>>echo https://github.com/anji/teamll574.git | cut -d /-f3
>>github.com

222-what is grep command in linux

>>grep is a filter command it is used to search a string in a given filter
>>grep "anji is" anji.txt  ##use qupotation other wise it will give some error found first letter second letlet will not conclude
grep -i  
-i Ignore case for matching/searching  ##this is important
-w to match a whole word     ##this is important
-v to display the lines which are not having green strings or text ##this is important
-o to print/display only matched parts from matched lines
-n to display the matched line numbers
-c to display matched count of lines
-A to display N lines after match  ##this is important
-B to display N lines before match  ##this is important
-c to display N lines around match  ##this is important
-r to search under current directory or sub-directory
-l to dispaly file names
-h it will hide files

>>grep -e "line" -e "test" -e "ok" anji.txt ##it will look all this strings
>>grep -E "line|above|bash|shell|python" anji.txt ##this also look the al the mentioned strings
>>grep -E "[[:digit:]]" anji.txt   ##it will print the numbers
>>grep -E "[[:upper:]]" anji.txt   ##it will print the upper case
>>grep -E "[[:lower:]]" anji.txt   ##it will print the lower
>>cat anji.txt | grep -E "[0-9]{1,3}\.[0-9]{1,3}\.[0-90{1,3}"  -->it will list of numbers in a file
>>cat anji.txt | grep -E "[0-9]{1,3}\.[0-9]{1,3}\.[0-90{1,3}\.[0-9]{1,3}\b"  -->it will show only list of ips only

223-What is awk used for?

>>The awk command is a Linux tool and programming language that allows users to process and manipulate data and produce formatted reports.

>>echo https://github.com/anji/teamll574.git | awk -F /'{print $1F}'
>>https output
>>echo https://github.com/anji/teamll574.git | awk -F / '{print $NF}'
>>teamll574.git will print

>>docker -v
xxx xxxx test, xxx xxxx  it will give the all the lines using below command you can get 3rd line
>>docker -v | cut -d " " -f 3
test,  you will get , also if you want delete that , use this
>>docker -v | cut -d " " -f 3 | tr "," " "
test

>>nginx -v  same but it will not show clearly that we using second command
>>nginx -v 2>&1 | cut -d " " -f 3
nginx/1.14.0
>>nginx -v 2>&1 | cut -d " " -f 3 | cut -d "/" -f 2
>>httpd -v | grep -E "version" | cut -d '/' -f 2 | cut -d ' ' -f 1
>>httpd -v | awk -F '[/]' ' /version/ {print $4}'
2.4.41
>>httpd -v | awk -F '[/]' ' NR==1 {print $4}'
2.4.41
NR==1   -->first line of file
>>vi anji.text
ck jk akk
dj kk like
exit
>>awk '{ print $1 $3 }' anji.text

iam giving varibale in linux
TRAFILE=https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.75/bin/apache-tomcat-9.0.75.tar.gz
>>echo $TRAFILE | awk -F "/" '{print $1}'
https
>>echo $TRAFILE | awk -F "/" '{print $2}'
dlcdn.apache.org
>>echo $TRAFILE | awk -F "/" '{print $6}'
bin
>>echo $TRAFILE | awk -F "/" '{print $NF}'   ->>NF is last line
apache-tomcat-9.0.75.tar.gz
>>echo $TRAFILE | awk -F "/" '{print $1F}'   -->1F is the lst line
https
>>echo $Trafile | rev | cut -d "/" -f1 | rev   -->it will first reverse the order then it correct the order
apache-tomcat-9.0.75.tar.gz
>>cat /etc/passwd | awk -F ":" '{print $F}'
root
anji
sampi

vi ani.sh

#!/bin/bash
TARFILE=https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.75/bin/apache-tomcat-9.0.75.tar.gz
FILENAME=$(echo $TARFILE | rev | cut -d "/" -f1 | rev)
DIRECTORY=$(echo $FILENAME | sed -e 's/.tar.gz//')
echo "Downloading $FILENAME"
wget $TARFILE
echo "untar $FILENAME"
tar -xf $FILENAME
echo "install java"
yum install java-11-openjdk-dlevel -y
cd $DIRECTORY/bin
sh startup.sh
:wq

vi test.txt
100 anji test IT 55000
200 sampi test sales 65000
300 gampa yellow IT 65000

>>awk '/sampi/' test.txt 
200 sampi test IT 65000   -->it will display only this 
>>awk '/IT/' test.txt 
100 anji test IT 55000
300 gampa yellow IT 65000
>>awk '{print $2 $4}' test.txt
anji 55000
sampi 65000
gampa 65000
>>awk '{print $2 $NF}' test.txt
anji 55000
sampi 65000
gampa 65000
>>awk '$4 ~/sales/' test.txt
200 sampi test sales 65000
>>awk -F: '{print $1,$2}' /etc/passwd 
anji X
sampi X   -->it will show like this 
>>awk -F: /sampi/'{print $1,$2}' /etc/passwd 
sampi X   -->only show the sampi only
>>awk 'BEGIN {OFF=":"} {print $2 $NF}' test.txt
anji:55000
sampi:65000
gampa:65000
anji,55000
>>awk 'BEGIN {OFS=","} {print $2 $NF}' test.txt  -->OFS -->output file separtor
sampi,65000
gampa,65000
>>awk 'END {print NR}' test.txt  -->it will show the records
3 -->anji
     sampi 
     gampa -->like this horizontal line will caluclate 

224-What is sed command in Linux with example?

>>it will do delete the lines or substitute a word and add the lines 
>>sed dont need manulay intervation vi requires manually intervation 
>>The Linux sed command is most commonly used for substituting text. It searches for the specified pattern in a file and replaces it with the wanted string. 
To replace text using sed , use the substitute command s and delimiters (in most cases, slashes - / ) for separating text fields
>>sed 's/foo/bar/g' hello.txt
>>sed -e '4s/foo/bar/' hello.txt
>>sed -i 's/${APP_NAME}.*/${APP_NAME}:${IMAGE_TAG}/g' deployment.yaml
APP_NAME=anji
IMAGE_TAG=1.0.4
APP_NAME:IMAGE_NAME=anji:1.0.4   -->it will replace everytime the build number will change
>>sed 's/foo/bar/g'  anji.txt    -->it will replace only second letter
foo anji. bar anji
foo sampi. bar test
>>sed 's/unix/linux/3g' geekfile.txt  -->it will replace only thirdd letter of the line 
>>sed '3 s/unix/linux/' geekfile.txt   -->it will replace only third line 
>>sed '1,3 s/unix/linux/' geekfile.txt  -->you can speccify specfic number of lines particularly

#it will delete the root where ever is thee ex i have 20 lines of code having 3 lines in root delete that root 3 lines reaming 17 lines will be 
>>sed -e '/root/ d' /tmp/passwd 
#if your not using the -i it will not delete it only show so use -i to delete
>>sed -i -e '/root/ d' /tmp/passwd    -->you can check what changes happen using this ccommand before and after 
#it will performing two command -e first root and -e nologin this two deleteing i have 20 lines in 3 lines root and 5 lines nologin if execute below command it will delete 8 lines and remaing 12 lines
will be there 
if you want execute three means you can like this -e '/root/ 'd -e '/anji/ 'd -e '/nologin/ 'd   -->it will execute the three commands 
>>sed -i -e '/root/ d' -e '/nologin/ d' /tmp/passwd      -
#it '1 d' it wil delete the first line in file anything in first line only 
>>sed -i -e '1 d' /tmp/passwd 
#replace with root insted of ROOT will replace only one place if you multiple use g 
>>sed -i -e 's/root/ROOT' /tmp/passwd 
#multiple place need to replace 
>>sed -i -e 's/root/ROOT/g' /tmp/passwd 
#it will replace only first line 
>>sed '1s/root/ROOT/' /tmp/passwd 
anji:x:29:ROOT:/ROOT:/bin/bash 
sampi:x:20:root:/root:/bin/bash
it will add first line of the file 
>>sed -e '1 i hello' /tmp/passwd 
hello 
anji:x:29:ROOT:/ROOT:/bin/bash 
sampi:x:20:root:/root:/bin/bash
#it will add first line after the hello 
>>sed -e '1 a hello' /tmp/passwd 
anji:x:29:ROOT:/ROOT:/bin/bash 
hello 
sampi:x:20:root:/root:/bin/bash
#it will replace second to first line 
>>sed -e '1 c hello' /tmp/passwd 
hello 
anji:x:29:ROOT:/ROOT:/bin/bash 
sampi:x:20:root:/root:/bin/bash
#add second line after everyline
>>sed -e '/root/ a hello' /tmp/passwd 
anji:x:29:ROOT:/ROOT:/bin/bash 
hello 
sampi:x:20:root:/root:/bin/bash
hello 
#it will replace anji in first line or first mongodb to anji value
>>sed -e '/refernce/ s/mongodb/anji/' /anji/anji.txt

225-what is Runlevel commands in linux

>>The default runlevel is specified in /etc/inittab
>>A runlevel is an operating state on a Unix and Unix-based operating system that is preset on the Linux-based system. Runlevels are numbered from zero to six. 
Runlevels determine which programs can execute after the OS boots up. The runlevel defines the state of the machine after boot.
init 0 – System halt i.e the system can be safely powered off with no activity.
init 1 – Single user mode.
init 2 – Multiple user mode with no NFS(network file system).
init 3 – Multiple user mode under the command line interface and not under the graphical user interface.
init 4 – User-definable.
init 5 – Multiple user mode under GUI (graphical user interface) and this is the standard runlevel for most of the LINUX based systems.
init 6 – Reboot which is used to restart the system.  

226-what is tr command

>>tr: short for translate
>>tr is useful to translate or delete given set of characters from the input
vi anji.txt
line 1
line 2
line 3
line 4
exit
>>tr 'i' 'I' < anji.txt  -->it will replace i to I 
>>tr 'i' '_' < anji.txt  -->it will replace i to _
>>docker -v | cut -d " " -f 3 | tr -d ","

227-what is seq command

>>seq command in Linux is used to generate numbers from FIRST to LAST in steps of INCREMENT. It is a very useful command where we had to generate list of numbers in while, for, until loop. 

>>seq 10   -->it will print 1 to 10 numbers
1
2
3
4
5
6
7
8
9
10
>>seq -s , 10
1,2,3,4,5,6,7,8,9,10
>>seq -s :  10
1:2:3:4:5:6:7:8:9:10
>>seq 2 2 20
2
4
6
8
10
12
14
16
18
20
>>seq 2 3 20
2
5
8
11
14
17
20
>>seq 5 9   -->it will print 5 6 7 8 9 only this numbers 
>>seq -f "%02g" 5 9
05
06
07
08
09

228-why shell is used in DevOps or linux 

>>it is group of command to execute in a sngle command 
>>Shell is the default OS in linux no additional installations needed
>>if we look into the future, containers are ore  happening containers are very minimal. you may not get a chance to install 3rd party major version is for is security 
>>while we go with OS shell in native, NAtive always have an advantage on its performance and behaviour 

229-how many shell is there in linux 

>>BASH  ---|
>>SH    ---|-->this 3 comes under BASH only 
>>KSH   ---|
>>CSH 
>>ZSH 
>>FISH 

230-what is she-bang in shell 

>>#!/bin/bash -->this is called she-bang this is first line of the shell 

231-how to execute the shell in linux or anywhere  

>>if the file have permission then execute using this command 
>>bash anji.sh 
>>./ anji.sh 

232-what are the topic there in shell to use shell script 

1-printing
2-varibales
3-Functions
4-conditions
5-Loops
6-Exit Status 
7-Inputs
8-Quotes
9-Redirections
10-SED Editor 

233-how to print the command in linux

>>echo hello world   -->this command is used to print the command after the echo  
>>vi anji.sh 
#!/bin/bash
#print the something 
echo anji 
#if your not giving ""double quotes it will give error 
echo "*********anji*********"
:wq

>>bash anji.sh 
anji 
*********anji*********

234-what is Quotes in shell script why we use in Quotes in shell script 

>>if you want give any special character then we can use Quotes if your not using any Quotes it will give any errors 
This are two types 
1-Single-Quotes:-Does not consider any character as a special character 
special character:- alphabates and numbers are normal character remaning all character are special character
normal character:-a-z 0-9 _
2-Double-Quotes:- very few characters like $ will be considered as special and remaining are normal character
#It is used print hello world with the **** if your not using "" this quotes it will give any error 
echo "**** Hello World ****"

235-what is set -e 

>>In a shell script, the set -e command is used to enable the "exit on error" option, which makes the script exit immediately if any command within the script returns a non-zero exit status
(indicating an error). This is often used to ensure that the script terminates if any critical command fails, making the script more robust by preventing it from continuing with potentially incorrect or 
unexpected results.
>>it will show when you execute shell script lot of commands any error it will show the erorr

236-how would you see the last command of shell script

>>echo $?   -->if it gives 0 means the command is executed succesfully

237-what are the color codes in shell or linux 

>>vi anji.sh 
#it will print anji in six differnt colors
sometime \e may not work all terminal instead you cna use this echo -e "\033[31manji\033[0m"
echo -e "\e[31manji\e[0m" #RED  
echo -e "\e[32manjii\e[0m" #Green
echo -e "\e[33manjiy\e[0m" #Yellow
echo -e "\e[34msampi\e[0m" #Blue
echo -e "\e[35manji\e[0m" #Magenta 
echo -e "\e[36manji\e[0m" #Cyan
:wq
>>bash anji.sh 
anji #RED 31
anjii #Green 32
anjiy #Yellow 33
sampi #Blue 34
anji #Magenta 35
anji #Cyan 36

238-how to print the date 

>>man date linux search internet it will show you can read

>>vi anji.sh 
#it will give the today date if you tomorrow execute it will give tomorrow date 
DATE=${date +%F}
echo hey today date is $DATE
ADD=$((2+3))  #you cna use this in arithemetic operations 
echo value ADD - $ADD 
:wq
>>bash anji.sh 
hey to date is 2024-01-08 
value ADD - 5

239-what is commadn line arguments

>>command line arguments are the arguments/values specified at the command prompt while running commands/shell scripts
>>these parametersvstart from $1 to $9
>>the fisrt argument is assigned as $1 and second argument is $2 and so on...

$0 -> the name of the script the path is included
$1 -> the first argument or parameter
$2 -> the second argument or parameter
$9 -> ninth parameter
${10}-${n}  - Represent positional parameters for arguments after nine
$#  -->represent total numbe of arguments
>>vi anji.sh
echo $1
echo $2
echo $3
exit
>>bash anji.sh 34 34 45
34 
34 
45

240-what is comments

>>A comment is a human-readble explanation that is written in the shell-script
>>ading comments to your bash or shell will save you lot of time and effort when you look at your code in future

there are two types of comments
1-single line comments 
##this is comment
2-multi line comments
<< anji
crretdkk
kjgsl
anji  -->this multi line comments under anji no word can execute
>>note: comments wont execute while running or executing your code

241-what are redirectors in linux or shell

>>this is >greater than 
>>this is <less than

Redirection operators
>>linux commands need some input (file or any another attribute )and it results some output
>>by default input is being given with the keyboard and output/error are displaying on your screen
>>sometimes you will want to put output of a command into a file or you many wnat to issue another commandd on the output of one command
>>in another case you may want a file to be the input for a command
So we have 
1-output Redirection
2-input Redirection
3-combining Redirection
1-output redirection
>>ls-lrt /etc/security > anji.txt
> it will save your data 
ls -lrt >anji.txt 
if you use this all the list will save and and the saved data will delete and save the fresh data
>> if you use this old data will save and new data will also save
ls -lrt /etc/test >>anji.txt 
it will store old and new content into this file
2-Input redirection 
cat < anji.txt
3-combining redirection
ls -lrt | awk '{print $1}' ##it will print only first letters only
drwxwxr-x  ##like this
ls -lrt | awk '{print $1}' | grep d ##it will highlight d letter
0-stdin  --?standard input
1-stdout -->standard output
2-stderr -->standard error

ls 1>anji.txt it will store success deatils by using 1
ls 2 >anji.txt it will store the errors by using 2 

java -version 1>anji.txt 2>anji.txt
it success will store 1>anji.txt erroe will store 2>anji.txt

java -version 1>success.txt 2>error.txt like this

>file_name defaults to success output
1>file-name success output
2> file_name error output

ls >/tmp/out -->if use single if any data is then out file then data will be overwritten
ls >>/tmp/out  --?previous data is there also present data will also store 

242-what is stdout and stdin 

stdout(>):-instead of displaying the output to the screen, if we want to store the output to a file then we use this redirector

stdin(<):-instead of taking the input from keyboard if we want to send through a file then we use this redirector

243-how to see previous command is execute properly or not

>>echo $?   -->if it throughs 0 means it will Success if another 1 or any number its un-suceessful 

244-what is conditions in linux or shell 

>>conditions are statements that evaluate to either true or false. They are used to make decisions about what code to execute based on the current state of the system
three types
1-IF:- 
if [ expression ]
then 
  commands
fi 
ex:-1
a=10
if [$a -eq 10 ] ; then #you can use this type or 
then 
  echo a is 10
fi   

2-If Else 
if [ expression ]
then 
  commands
else 
  commands
fi 
ex1:-
a=11
if [$a -eq 10 ] ; then #you can use this type or 
then 
  echo a is 10
else
  echo a is 11
fi   

3-Else If
if [ expression1 ]
then 
  command1
elif [ expression2 ]  
then 
  command2
elif [ expression3 ]
then 
  command3
else
  command4
fi 

read -p 'Enter Course Name: ' course_name
if [ "${course_name}" == "AWS" ]; then 
  echo "Welcome to AWS Training"
elif ["${course_name}" == "AZURE" ]; then 
  echo "Welcome to Azure Training"
else
  echo "Unknown Course Name"
fi       
81-how to exit when my script fails in shell script

if [ $? -eq 0 ]; 
then 
  echo Success  #if its install successful then print this success 
else 
  echo Failure   #if this not install it will print failure 
  exit  # if the failure happens then automatically delete   
  exit 1 #this is also work 
fi     

245-what is functions in linux or shell script 

>>In Linux and shell scripting, functions serve a similar purpose as in programming languages. They are self-contained blocks of code that can be defined and invoked within a script or directly in the
command line. Functions in shell scripts are used for the following purposes:
>>functions also like variables its replaceing conditions if your using same conditions many times then using function is good to execute single command write that script in function that function 
stores as a variable then call that variable directly no need of $ also 
Modularity: Functions help break down a large script into smaller, more manageable sections, each responsible for a specific task.

Reusability: Functions can be reused in different parts of a script or in other scripts, promoting code reuse and reducing duplication.

Parameterization: Functions can accept arguments and parameters, allowing you to customize their behavior based on input values.

Error Handling: Functions can encapsulate error handling logic, making scripts more robust.

#!/bin/bash

# Define a function that greets a user
greet_user() {
  local username="$1"
  echo "Hello, $username!"
}

# Call the function
greet_user "John"
greet_user "Alice"

ex2:-
anji() {
  echo I am a anji function  
} 

#you can call this way 
anji #your calling this thats it 

ex3:-
#if you use conditions for example i write shell script in 100 commands then each command i write success or failure conditions to the each command its TDS task insted we can function then call a single
command ex below  
status_code() {
if [ $? -eq 0 ]
then 
  echo Success  #if its install successful then print this success 
else 
  echo Failure   #if this not install it will print failure 
  exit  # if the failure happens then automatically delete   
fi
}   

functions also have a numbers like this 

>>vi anji.sh 
echo "0 -$0"
echo "1 -$1"
echo "2 -$2"
echo "* -$*"
echo "@ -$@"
echo "# -$#"
:wq
>>bash anji.sh abd 1 
0 - anji.sh
1 - abd
2 - 1
* - abd 1
@ - abd 1
# - 2   

>>bash anji.sh abd 1 2 
0 - anji.sh
1 - abd
2 - 1
* - abd 1 2
@ - abd 1 2
# - 3

>>bash anji.sh "abd 1 2"   #if you this quotes it will treat only one value 
0 - anji.sh
1 - abd 1 2
2 - 
* - abd 1 2
@ - abd 1 2
# - 1
you can call function like this 

246-how to dry your code like duplicate code 

>>yes we can achive this using functions like we commons.sh file then we have fornted(){} backend(){} appserver(){}
then that three is stored in common.sh then we can create the 
vi fornted.sh

source common.sh  ##this will take the source from common.sh an dexecute that shell accordingly you can create the variables and use that 
component=roboshop  #this will call common.sh file under frontend function then execute that shell script 
frontend ##we are giving that function calling directly what we written like you cna create backend and appserver

247-what is Read command in linux or shell script

>>The read command in Linux or shell scripting is used to read input from the user or from a file and store it in a variable. It allows you to interactively collect data from the user while a script is
running or read data from a file and assign it to a variable. The basic syntax of the read command is as follows:

#!/bin/bash

read -p 'Enter your name: ' name

echo Your Name - $name

250-what is loops in linux or shell script

>>loops is a concept you want do samething again and again you can do loops 
>>loops are control structures that allow you to repeat a set of commands or actions multiple times. There are primarily two types of loops used in shell scripting: for loops and while loops.
1-For Loops::-A for loop is used to iterate over a range of values or elements, such as a list of items, and execute a block of code for each item in the list
# Print numbers from 1 to 5
for num in 1 2 3 4 5
do
    echo "Number: $num"
done

2-While Loops:A while loop is used to repeatedly execute a set of commands as long as a specified condition is true.
# Print numbers from 1 to 5 using a while loop
num=1
while [ $num -le 5 ]
do
    echo "Number: $num"
    num=$((num + 1))
done

ex2:-
i=10
while [ $i -gt 0 ]; do 
  echo I = $i
  i=$(($i-1))
done

for fruit in apple banana ; do
  echo Fruit Name = $fruit
done 
  
251-what are the challenges will face using shell script

1-manual effort needed:-some kind of tasks something need to add manully
2-Server Lifecycle Management: Managing the entire server lifecycle, including provisioning, scaling, and decommissioning, can become complex, and automation should be in place to handle these 
tasks efficiently.
3-Imperative(vs)Declarative  :-shell script is Imperative hey please do it everything you have to tell . coming to Declarative your giving order do it thats it 
4-Scalability: As the number of servers increases, managing shell scripts can become cumbersome. You'll need to ensure that your scripts can scale effectively without causing performance issues or 
becoming unmanageable.
5-Error Handling: Automation scripts can fail, and it's crucial to implement robust error handling and logging mechanisms to detect, report, and resolve issues efficiently.
6-Security: Managing sensitive data, such as API keys, passwords, or other credentials, in shell scripts can pose a security risk if not handled properly. You need to implement secure methods for storing
and handling these credentials.
7-Consistency: Ensuring consistency across a large number of servers can be challenging. You should use configuration management tools or other techniques to maintain consistent server configurations and 
application deployments.
8-Version Control: Keeping track of the various versions of your scripts can become complicated, especially if multiple team members are working on them. Using version control systems like Git can help
manage changes and collaboration effectively.
9-Monitoring and Reporting: As the number of servers grows, it becomes essential to have a robust monitoring and reporting system in place to track server health, resource utilization, and the status of 
your automation tasks.
10-Script has to be local on Server:- you have to go each and every system pull the code and execute those things 
>>this will be overcome come by Anible or Terraform like configuration management tool 

252-when you have one folder that folder have 100 files except jenkinsfile remaing all files need to zip anji.zip except jenkinsfile

>>sh 'zip -r anji.zip  * -x jenkinsfile   ##it will not send the jenkinsfile into anji.zip  

if (app_lang == "nginx" || app_lang == "python") {  #if the nginx or python anything will execute it is logical operator using shell script or anywhere  
//    sh "zip -r ${component}-${TAG_NAME}.zip * -x Jenkinsfile ${extraFiles}"
//  }

253-for example [$? -eq 0 ] this your writting then write opposite 

if [ $? -ne 0 ]; then 
  add user anji 
  else 
  exit 
fi   

rm -rf /usr/share/nginx/html/*
if [$? -eq 0 ]; then 
  echo Success
else
  echo Failure   
  exit # if failure then exit that step
fi 

254-create success or failure messages while executing scripts 

vi anji.sh 
echo -e "\e[35m install nginx\e[0m"
yum install nginx -y 
if [$? -eq 0 ]  
then 
  echo Success
else
  echo Failure   
    exit # if failure then exit that step 
fi   

echo -e "\e[35m remove nginx default files\e[0m"
rm -rf /usr/share/nginx/html/*
if [$? -eq 0 ]; then 
  echo Success
else
  echo Failure   
  exit # if failure then exit that step
fi   

>>you can do this using function by code dry 

status_check() {
    if [$? -eq 0 ]  
then 
  echo Success
else
  echo Failure   
    exit # if failure then exit that step 
fi   
}

echo -e "\e[35m install nginx\e[0m"
yum install nginx -y 
status_check    ##this will call that function 

echo -e "\e[35m remove nginx default files\e[0m"
rm -rf /usr/share/nginx/html/*
status_check

>>another way is also there 

>>common.sh 
status_check() {
    if [$? -eq 0 ]  
then 
  echo Success
else
  echo Failure   
    exit # if failure then exit that step 
fi   
}
:wq
>>vi anji.sh 
source common.sh  ##this will call the common.sh file and status_check function  
echo -e "\e[35m install nginx\e[0m"
yum install nginx -y 
status_check    ##this will call that function 

echo -e "\e[35m remove nginx default files\e[0m"
rm -rf /usr/share/nginx/html/*
status_check

>>common.sh 
status_check() {
    if [$? -eq 0 ]  
then 
  echo Success
else
  echo Failure   
  exit # if failure then exit that step 
fi   
}

print_head() {
    echo -e "\e[35m $1 \e[0m"
} 
:wq
>>vi anji.sh 
source common.sh  ##this will call the common.sh file and status_check function  
print_head "install nginx" #this will also common.sh and take print_head color code to reduce the code length 
yum install nginx -y 
status_check    ##this will call that function 

print_head "remove nginx default files"
rm -rf /usr/share/nginx/html/*
status_check

255-what are the print messages

>>echo command will help us printing message on screen from our scripts 
>>while printing we can enable some esc sequences for more options 
1. \e -->to enable color 
2. \n -->to print new line
echo -e "line1\nline2"
line1
line2 
 
3. \t -->to print new tab   
echo -e "line1\tline2"
line1 line2 
echo -e "line1\t\tline2"   -->double tab 
line1   line2 

256-what are the exit commands

>>exit command is used to exit the script 
>>Also exit staus stop the script and will not execute any other commands
>echo $?  -->if you getting zero means success
>>echo $?  -->if you 1-255 means failure
>>127 command not found
>>exit 0 -->means its suceess 
>>exit 1 -->means not sucess 1 after nay value its not success

19-create a user in user in differnet os like redhat or debian 

vi anji.sh 
UNAME=$(uname)
case $UNAME in 
  linux)
    grep REDHAT /etc/os-releases &>/dev/null
    if [ $? -eq 0 ]; then 
      useradd anji 
    fi 
    grep DEBAIN /etc/os-releases &>/dev/null
    if [ $? -eq 0 ]; then 
      adduser anji 
    fi
  ;;
esac   

257-how to do mongodb bindip address to listen the another service while connected to mongodb when we giving mongodb url to any other service 

>>vim /etc/mongod.conf 

net:
  port: 27017
  bindIp: 127.0.0.1 ##replace 0.0.0.0 or your web server ip like any public ip or private of your service 
:wq

>>systemctl restart mongod 

258-the mot asked and useful commands

>>nproc  -->it will show how many processor list
>>top ----|top displays a continuously updating screen showing system summary information and a list of processes sorted by CPU usage.
>>htop  --|
>>df -p    -->it will disk usage
>>df -h   -->Check disk space
>>du -h   -->it will list the folder size in linux
>>ps -ef   -->it is like task manager in linux
>>ps -e  -->it will show the process
>>free -m  how much MEMORY free 
>>uptime    -->it will show SYSTEMLOAD

259-what is shell-script

>>shell scripting is best way to automate repetitive tasks in our linux/unix environment
>>shell script is a sequence of system commands pasted in a text file
>>shell scripting is not a dynamic language
>>shell scripting is static language

we can enhance use this shell concepts
1-varibales
2-loops
3-functions
4-job scdeuling manymore
5-conditonal statements
6-filters like grep, sed, awk, cut

260-what is /etc/sysctl.conf

>>The sysctl command is used to modify kernel parameters at runtime. /etc/sysctl.conf is a text file containing sysctl values to be read in and set by sysct at 
boot time. To view current values, enter:

261-what command is used to see the diskusage of particular user

>>du -h /home/user/Desktop 
>>df -h    ->> it will show the space

262-how to check the service is running or not in linux

>>you can ps -ef | grep jenkins  it will proces ids

263-you using one command that got hanged what you can do

>>so if that hanged i can take one more terminal login with same user then i can check this commads using pirocessor id if this hanged then i can kill that process
>>ps -ef | grep ls
>>kill -9 "pid"
>>kill commands 60+ is there 9 is used to kill the service

264-how to check the memory usage of your linux system

>>free -m                     -->it will show the memory and used and free
>>free -g                     -->it will show  memory in gb
>>top        -->it will give how many users connected memory and ram and everything will see

265-what is daily activites in shell-script

>>delete old files using shell script
>>taking inventory files like version and ips and those
>>monitoring files 
>>installing packages
>>to see versions
>>to see backup
>>if server stop sending a mail 

266-what is break and continue in shell script or bash scripting

>>break command is used to terminate /exit current loopcompletely before the actual ending of loop
>>contine command is used in script to skip current iteration of loop & continue to next iteration of the loop

267-what is debug in bash or shell scripting in linux

debugging is determining the cause which fails the script
why script fails: because of some errors
this is because of two types of errors
1-syntax errors
2-runtime errors
>>and ther are different commands for debugging and we will work with set command
set -n   -->you will see the erors of your script
set -x   -->you will see which line error in your script
set -e   -->if you get an error in the script will get exit
set -v   -->verbos of the command
#!/bin/bash
set -n
pwd
date
whoami
user=$(whoami
echo "this is about debugging a bash shell script"
echo "this user is: $user"

268-what is the nice command in linux

>>The nice command lets you run a command at a priority lower than the command's normal priority. The Command parameter is the name of any
executable file on the system. If you do not specify an Increment value the nice command defaults to an increment of 10.

269-what is heredoc command

>>heredoc is very useful to write multi-lines or multiline block
command << delimeter
line-1
line-2
line-2
delimeter

270-what is here string

>>here string is like here documnet only but with one line

>>echo "hello anji" | tr [a-z] [A-Z] -->it will show all the letters in captial letters

271-what is case statements

>>The case statement simplifies complex conditions with multiple different choices. This statement is easier to maintain and more readable than nested if statements

272-what is text command

>>it is a command to judge conditions
Numbers:-
[[ int1 -eq int2 ]]  -->it return if they are equal else false
[[int1 -ne int2 ]]   -->it return false if they are not equal to true
[[init -lt int2 ]]   -->it return true if init1 is less than int2 else false
[[int1 -le int2 ]]   -->it return true if int1 is less than or equal to int2 else false
[[int1 -gt int2 ]]   -->it return true if int1 is greate than int2 else false
[[int1 -ge int2 ]]   -->it return true if int1 is greater than or equal to int2 else false
[[ !int1 -eq int2 ]] -->it reserve the result
strings:-
[[ -z str ]]       -->it return true if the length of the str is zeroo else false
[[ -n str ]]       -->it return true if the length of the str is no-zero else false
[[ str1 == str2 ]] -->it return true if both the strings are equal else false
[[str1 != str2 ]]  -->it return true if both the strings are equal else false

273-what is command chaining operator

>>command chanining operators are useful to combine several commands so that we can write simple and short shell scripts
the differnet command chaining operators are
1- ;
2- &&
3- ||
4- && ||
>>which jenkins; ls 
it will show the jenkins and ls list
>>which apache2; ls
>>it will fail apahe2 and it will show the list ls
>>which docker && docker -v

274-what is the differnce between [] & [[]]

>>The single bracket is a built-in command that's older than the double bracket. The double bracket is an enhanced version of the single bracket. 
If we want the portability of scripts, we should prefer single brackets. However, using the double brackets is generally more convenient.

275-what is an arrays

>>an array is the data structure of the bash shell which is used to store multiple data's 

276-what is the differnce between $@ and $*

>>Both the parameters specify the command-line arguments. However, the "$*" special parameter takes the entire list as one argument with spaces 
between and the "$@" special parameter takes the entire list and separates it into separate arguments.

277-how to delete old files in linux

>>find -mtime +90 exec rm -rf {} \;

278-what is while loop

>>The while loop enables you to execute a set of commands repeatedly until some condition occurs. It is usually used when you need to manipulate 
the value of a variable repeatedly.
>>if you want re run your commands again and again n number of times loop concepts while helpful

279-shell script use while loop and for loop 

while true 
do 
curl -sL http://53.65.36.96 | grep -i '\-inst'
done   -->this unlimited time execute until you stop 

for i in cart app yellow shipping login ( or use this ) "cart" "app" "yellow" "shipping" "login"
do 
docker push anji1592/$i
done  -->this is limited because you mention i value 

280-most asked commands

>>lsblk  -->hard drives and partitions
>>ps -ef        -->it is like task manager in linux
>>cat /proc/cpuinfo   -->cpuinfo 
>>top          -->it will show the cpu utilization ram and memory and it will show how many service runing in background
>>View CPU usage: top or htop
>>free -m 
>>cat /proc/meminfo  -->to see memory info linux
>>View memory usage: free -h
>>df -h -->The df command displays information about total space and available space on a file system.
>>df -hT    -->it will show the type of harddisk
>>nproc -->it will show how many processor list
>>ps -->process from your terminal
>>ps -e  -->it will show the process

259-what is jq command in linux and shell script

260-what is the differnce between shell script and python 









